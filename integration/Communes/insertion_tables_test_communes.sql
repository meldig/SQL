SET SERVEROUTPUT ON
DECLARE
    v_nouv_id NUMBER(38, 0);
BEGIN
    SAVEPOINT POINT_SAUVEGARDE_TABLES_TEST;
-- 1. Désactivation des contraintes
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_IDENTIFIANT_COMMUNE DISABLE CONSTRAINT TEST_TA_IDENTIFIANT_COMMUNE_FID_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_IDENTIFIANT_COMMUNE DISABLE CONSTRAINT TEST_TA_IDENTIFIANT_COMMUNE_FID_IDENTIFIANT_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_CODE DISABLE CONSTRAINT TEST_TA_CODE_FID_LIBELLE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE DISABLE CONSTRAINT TEST_TA_COMMUNE_FID_LIB_TYPE_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE DISABLE CONSTRAINT TEST_TA_COMMUNE_FID_NOM_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE DISABLE CONSTRAINT TEST_TA_COMMUNE_FID_METADONNEE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_ZA_COMMUNES DISABLE CONSTRAINT TEST_TA_ZA_COMMUNES_FID_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_ZA_COMMUNES DISABLE CONSTRAINT TEST_TA_ZA_COMMUNES_FID_ZONE_ADMINISTRATIVE_FK';

-- 2. Insertion ds valeurs dans les tables de test
    INSERT INTO G_GEO.TEST_ta_code(objectid, valeur, fid_libelle)
    SELECT
        objectid,
        valeur,
        fid_libelle
    FROM
        G_GEO.TA_CODE;
        
    INSERT INTO G_GEO.TEST_ta_identifiant_commune(objectid, fid_commune, fid_identifiant)
    SELECT
        objectid,
        fid_commune,
        fid_identifiant
    FROM
        G_GEO.ta_identifiant_commune;
        
    INSERT INTO G_GEO.TEST_ta_commune(objectid, fid_lib_type_commune, fid_nom, fid_metadonnee, geom)
    SELECT
        objectid,
        fid_lib_type_commune,
        fid_nom,
        fid_metadonnee,
        geom
    FROM
        G_GEO.ta_commune;
        
    INSERT INTO G_GEO.TEST_ta_za_communes(objectid, fid_commune, fid_zone_administrative, debut_validite, fin_validite)
    SELECT
        objectid,
        fid_commune,
        fid_zone_administrative,
        debut_validite,
        fin_validite
    FROM
        G_GEO.ta_za_communes;
    
-- 4. Réactivation des contraintes
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_IDENTIFIANT_COMMUNE ENABLE CONSTRAINT TEST_TA_IDENTIFIANT_COMMUNE_FID_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_IDENTIFIANT_COMMUNE ENABLE CONSTRAINT TEST_TA_IDENTIFIANT_COMMUNE_FID_IDENTIFIANT_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_CODE ENABLE CONSTRAINT TEST_TA_CODE_FID_LIBELLE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE ENABLE CONSTRAINT TEST_TA_COMMUNE_FID_LIB_TYPE_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE ENABLE CONSTRAINT TEST_TA_COMMUNE_FID_NOM_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE ENABLE CONSTRAINT TEST_TA_COMMUNE_FID_METADONNEE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_ZA_COMMUNES ENABLE CONSTRAINT TEST_TA_ZA_COMMUNES_FID_COMMUNE_FK';
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_ZA_COMMUNES ENABLE CONSTRAINT TEST_TA_ZA_COMMUNES_FID_ZONE_ADMINISTRATIVE_FK';

-- 5. Mise à jour du START WITH de la table TEST_TA_COMMUNE
-- 5.1. Sélection du Max(objectid)+1 de la table
    SELECT
        MAX(objectid)+1
        INTO v_nouv_id
    FROM
        G_GEO.TEST_TA_COMMUNE;
        
-- 5.2. Mise à jour du START WITH du champ OBJECTID avec la valeur Max(objectid)+1
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_COMMUNE MODIFY objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY(START WITH ' ||v_nouv_id|| ' INCREMENT BY 1)';
    
-- 5.3. Mise à jour du START WITH de la table TEST_TA_IDENTIFIANT_COMMUNE
-- 5.4. Sélection du Max(objectid)+1 de la table
    SELECT
        MAX(objectid)+1
        INTO v_nouv_id
    FROM
        G_GEO.TEST_TA_IDENTIFIANT_COMMUNE;
        
-- 5.5. Mise à jour du START WITH du champ OBJECTID avec la valeur Max(objectid)+1
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_IDENTIFIANT_COMMUNE MODIFY objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY(START WITH ' ||v_nouv_id|| ' INCREMENT BY 1)';
    
-- 5.6. Mise à jour du START WITH de la table TEST_TA_ZA_COMMUNES
-- 5.7. Sélection du Max(objectid)+1 de la table
    SELECT
        MAX(objectid)+1
        INTO v_nouv_id
    FROM
        G_GEO.TEST_TA_ZA_COMMUNES;
        
-- 5.8. Mise à jour du START WITH du champ OBJECTID avec la valeur Max(objectid)+1
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_ZA_COMMUNES MODIFY objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY(START WITH ' ||v_nouv_id|| ' INCREMENT BY 1)';
    
-- 5.9. Mise à jour du START WITH de la table TEST_TA_CODE
-- 5.10. Sélection du Max(objectid)+1 de la table
    SELECT
        MAX(objectid)+1
        INTO v_nouv_id
    FROM
        G_GEO.TEST_TA_CODE;
        
-- 5.11. Mise à jour du START WITH du champ OBJECTID avec la valeur Max(objectid)+1
    EXECUTE IMMEDIATE 'ALTER TABLE G_GEO.TEST_TA_CODE MODIFY objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY(START WITH ' ||v_nouv_id|| ' INCREMENT BY 1)';
    
    COMMIT;
    
    EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('L''erreur ' || SQLCODE || 'est survenue. Un rollback a été effectué : ' || SQLERRM(SQLCODE));
        ROLLBACK TO POINT_SAUVEGARDE_TABLES_TEST;
END;