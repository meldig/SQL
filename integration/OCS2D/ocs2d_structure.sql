-- Creation de la structure pour les données OCS2D

-- 1. Création de la table TA_OCS2D_GEOM
-- 1.1. La table TA_OCSD_GEOM sert à acceuillir la géométrie des polygones OCS2D.
CREATE TABLE TA_OCS2D_GEOM(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_GEOM_OBJECTID.NEXTVAL NOT NULL,
    geom SDO_GEOMETRY
    );

-- 1.2. Création des commentaires des colonnes
COMMENT ON TABLE TA_OCS2D_GEOM IS 'Table regroupant les zones IRIS';
COMMENT ON COLUMN TA_OCS2D_GEOM.objectid IS 'Clé primaire de la table TA_OCS2D_GEOM.';
COMMENT ON COLUMN TA_OCS2D_GEOM.geom IS 'Géométrie des zones OCS2D.';

-- 1.3. Création de la clé primaire
ALTER TABLE 
    TA_OCS2D_GEOM
    ADD CONSTRAINT TA_OCS2D_GEOM_PK 
    PRIMARY KEY("OBJECTID")
    USING INDEX TABLESPACE "G_ADT_INDX";

-- 1.4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_OCS2D_GEOM',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 594000, 964000, 0.001),SDO_DIM_ELEMENT('Y', 6987000, 7165000, 0.001)), 
    2154
);

-- 1.5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_OCS2D_GEOM_SIDX
ON TA_OCS2D_GEOM(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POLYGON, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');


-- 2. Création de la table TA_OCS2D
-- 2.1. La table TA_OCS2D sert à acceuillir les informations provenant des données OCS2D
CREATE TABLE G_OCS2D.TA_OCS2D(
	objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_OBJECTID.NEXTVAL NOT NULL,
    fid_ocs2d_geom NUMBER(38,0) NOT NULL
);


-- 2.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D IS 'Table qui contient les identifiants des elements OCS2D';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D.objectid IS 'Clé primaire de la table TA_OCS2D, identifiant des elements OCS2D';
COMMENT ON COLUMN TA_OCS2D.fid_ocs2d_geom IS 'Clé étrangère vers la table TA_OCS2D_GEOM pour connaitre la geométrie d''un élément OCS2D.';


-- 2.3. Création de la clé primaire
ALTER TABLE 
	G_OCS2D.TA_OCS2D
	ADD CONSTRAINT TA_OCS2D_PK 
	PRIMARY KEY("OBJECTID")
	USING INDEX
	TABLESPACE "G_ADT_INDX";


-- 2.4.1. vers la table ta_ocs2d_source
ALTER TABLE TA_OCS2D
    ADD CONSTRAINT TA_OCS2D_FID_OCS2D_GEOM_FK
    FOREIGN KEY (fid_ocs2d_geom)
    REFERENCES G_OCS2D.TA_OCS2D_GEOM(objectid);


-- 3. Creation de la table TA_OCS2D_MILLESIME
-- 3.1. Table qui sert à associé un élément OCS2D à son millesime
CREATE TABLE G_OCS2D.TA_OCS2D_MILLESIME(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_MILLESIME_OBJECTID.NEXTVAL NOT NULL,
    fid_ocs2d NUMBER(38,0) NOT NULL,
    fid_metadonnee NUMBER(38,0) NOT NULL
);

-- 3.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_MILLESIME IS 'Table qui met en relation les éléments OCS2D avec ses metadonnees.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_MILLESIME.objectid IS 'Clé primaire de la table TA_OCS2D_MILLESIME';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_MILLESIME.fid_ocs2d IS 'Clé étrangère vers la G_OCS2D.TA_OCS2D';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_MILLESIME.fid_metadonnee IS 'Clé étrangère vers la table G_GEO.TA_METADONNEE';

-- 3.3. Création de la clé primaire
ALTER TABLE 
    G_OCS2D.TA_OCS2D_MILLESIME
    ADD CONSTRAINT TA_OCS2D_MILLESIME_PK 
    PRIMARY KEY("OBJECTID")
    USING INDEX
    TABLESPACE "G_ADT_INDX";

-- 3.4. création de la clé étrangère vers la table ta_metadonnee pour connaitre les métadonnees des éléments OCS2D
-- 3.4.1. Clé étrangère vers la table G_GEO.TA_OCS2D
ALTER TABLE G_OCS2D.TA_OCS2D_MILLESIME
    ADD CONSTRAINT TA_OCS2D_MILLESIME_FID_OCS2D_FK
    FOREIGN KEY (fid_ocs2d)
    REFERENCES G_OCS2D.TA_OCS2D(objectid);

-- 3.4.2. Clé étrangère vers la table G_GEO.TA_METADONNEE
ALTER TABLE G_OCS2D.TA_OCS2D_MILLESIME
    ADD CONSTRAINT TA_OCS2D_MILLESIME_FID_METADONNEE_FK
    FOREIGN KEY (fid_metadonnee)
    REFERENCES G_GEO.TA_METADONNEE(objectid);

-- 3.5. Ajout d'une contrainte d'unicite sur les champs fid_ocs2d, fid_metadonnee.
-- un élement ne peut pas avoir deux fois les memes metadonnee
ALTER TABLE G_OCS2D.TA_OCS2D_MILLESIME
ADD CONSTRAINT TA_OCS2D_MILLESIME_FID_OCS2D_FID_METADONNEE_UNIQUE UNIQUE("FID_OCS2D","FID_METADONNEE");

-- 4. Creation de la table TA_OCS2D_RELATION_LIBELLE
-- 4.1. La table TA_OCS2D_RELATION_LIBELLE sert à acceuillir les informations permettant de joindre un élément OCS2D multidate à ses attributs
CREATE TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID.NEXTVAL NOT NULL,
    fid_ocs2d_millesime NUMBER(38,0) NOT NULL,
    fid_libelle NUMBER(38,0) NOT NULL
);

-- 4.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE IS 'Table qui permet d''associer chaque element OCS2D à son code de couvert et d''usage du sol, ainsi qu''à son indice de photo-interpretation';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_LIBELLE.objectid IS 'Clé primaire de la table TA_OCS2D_RELATION_LIBELLE';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_LIBELLE.fid_ocs2d_millesime IS 'Clé étrangère vers la table TA_OCS2D_MILLESIME';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_LIBELLE.fid_libelle IS 'Clé étrangère vers la table G_GEO.TA_LIBELLE';

-- 4.3. Création de la table TA_OCS2D_RELATION_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE
    ADD CONSTRAINT TA_OCS2D_RELATION_LIBELLE_PK 
    PRIMARY KEY("OBJECTID")
    USING INDEX
    TABLESPACE "G_ADT_INDX";

-- 4.4. création de la clé étrangère vers la table ta_metadonnee pour connaitre les métadonnees des éléments OCS2D
-- 4.4.1. Clé étrangère vers la table G_GEO.TA_OCS2D
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE
    ADD CONSTRAINT TA_OCS2D_RELATION_LIBELLE_fid_ocs2d_MILLESIME_FK
    FOREIGN KEY (fid_ocs2d_millesime)
    REFERENCES G_OCS2D.TA_OCS2D_MILLESIME(objectid);

-- 4.4.1. Clé étrangère vers la table G_GEO.TA_METADONNEE
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE
    ADD CONSTRAINT TA_OCS2D_RELATION_LIBELLE_FID_LIBELLE_FK
    FOREIGN KEY (fid_libelle)
    REFERENCES G_GEO.TA_LIBELLE(objectid);

-- 4.5. Création d'une contrainte d'unicite. Un element OCS2D à un millesime distingue ne peut pas avoir deux fois le meme fid_libelle
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_LIBELLE
ADD CONSTRAINT G_OCS2DTA_OCS2D_RELATION_LIBELLE_FID_OCS2D_MILLESIME_FID_LIBELLE_UNIQUE UNIQUE ("FID_OCS2D_MILLESIME","FID_LIBELLE");

-- 5. Création de la table TA_OCS2D_COMMENTAIRE
-- 5.1. Table TA_OCS2D_COMMENTAIRE pour acceuillir les commentaires que peuvent avoir les surfaces OCS2D
CREATE TABLE TA_OCS2D_COMMENTAIRE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID.NEXTVAL NOT NULL,
    valeur VARCHAR2(255) NOT NULL
);

-- 5.2. Création des commentaires
COMMENT ON TABLE TA_OCS2D_COMMENTAIRE IS 'Table contenant les commentaires que peuvent avoir les surfaces OCS2D';
COMMENT ON COLUMN ta_ocs2d_commentaire.objectid IS 'Clé primaire de la table';
COMMENT ON COLUMN ta_ocs2d_commentaire.valeur IS 'Valeur du commentaire';

-- 5.3. Création de la clé primaire
ALTER TABLE 
    ta_ocs2d_commentaire
    ADD CONSTRAINT ta_ocs2d_commentaire_PK 
    PRIMARY KEY("OBJECTID")
    USING INDEX TABLESPACE "G_ADT_INDX";


-- 6. Création de la table TA_OCS2D_RELATION_COMMENTAIRE
-- 6.1. La table TA_OCS2D_RELATION_COMMENTAIRE est une table qui relie les zones OCS2D avec les commentaires qu'elles peuvent avoir.
CREATE TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID.NEXTVAL NOT NULL,
	fid_ocs2d_millesime NUMBER(38,0) NOT NULL,
	fid_ocs2d_commentaire NUMBER(38,0) NOT NULL
);

-- 6.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE IS 'Table permettant d''associer chaque element OCS2D à un millesime distingue à ses commentaires.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE.objectid IS 'Clé primaire vers la table TA_OCS2D_RELATION_COMMENTAIRE.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE.fid_ocs2d_millesime IS 'Clé étrangère vers la table TA_OCS2D_MILLESIME.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE.fid_ocs2d_commentaire IS 'Clé étrangère vers la table TA_OCS2D_COMMENTAIRE pour connaitre le commentaire de la zone OCS2D concernée.';

-- 6.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE
	ADD CONSTRAINT TA_OCS2D_RELATION_COMMENTAIRE_PK 
	PRIMARY KEY("OBJECTID")
	USING INDEX TABLESPACE "G_ADT_INDX";

-- 6.4. Création des clé étrangère
-- 6.4.1. vers la table G_OCS2D.TA_OCS2D_RELATION_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE
	ADD CONSTRAINT TA_OCS2D_RELATION_COMMENTAIRE_fid_ocs2d_MILLESIME_FK
	FOREIGN KEY (fid_ocs2d_millesime)
	REFERENCES TA_OCS2D_MILLESIME(objectid);

-- 6.4.2. vers la table G_OCS2D.TA_OCS2D_COMMENTAIRE
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE
	ADD CONSTRAINT TA_OCS2D_RELATION_COMMENTAIRE_FID_COCS2D_COMMENTAIRE_FK
	FOREIGN KEY (fid_ocs2d_commentaire)
	REFERENCES TA_OCS2D_COMMENTAIRE(objectid);

-- 6.5. Un polygone ne peut pas avoir deux fois le meme commentaire
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE 
ADD CONSTRAINT TA_OCS2D_RELATION_COMMENTAIRE_FID_OCS2D_MILLESIME_FID_OCS2D_COMMENTAIRE_UNIQUE
UNIQUE (FID_OCS2D_MILLESIME,FID_OCS2D_COMMENTAIRE);

-- 7. Création de la table TA_OCS2D_SOURCE
-- 7.1. Table TA_OCS2D_SOURCE pour acceuillir les sources que peuvent avoir les surfaces OCS2D
CREATE TABLE TA_OCS2D_SOURCE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_SOURCE_OBJECTID.NEXTVAL NOT NULL,
    valeur VARCHAR2(255) NOT NULL
);

-- 7.2. Création des commentaires
COMMENT ON TABLE TA_OCS2D_SOURCE IS 'Table contenant les sources que peuvent avoir les surfaces OCS2D';
COMMENT ON COLUMN ta_ocs2d_source.objectid IS 'Clé primaire de la table';
COMMENT ON COLUMN ta_ocs2d_source.valeur IS 'Valeur de la source';

-- 7.3. Création de la clé primaire
ALTER TABLE 
    ta_ocs2d_source
    ADD CONSTRAINT ta_ocs2d_source_PK 
    PRIMARY KEY("OBJECTID")
    USING INDEX TABLESPACE "G_ADT_INDX";


-- 8. Création de la table G_OCS2D.TA_OCS2D_RELATION_SOURCE
-- 8.1. La table TA_OCS2D_RELATION_SOURCE est une table qui relie les zones OCS2D avec les commentaires qu'elles peuvent avoir.
CREATE TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID.NEXTVAL NOT NULL,
	fid_ocs2d_millesime NUMBER(38,0) NOT NULL,
	fid_ocs2d_source NUMBER(38,0) NOT NULL
);

-- 8.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE IS 'Table permettant d''associer chaque element OCS2D à un millesime distingue à ses sources.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_SOURCE.objectid IS 'Clé primaire de le table TA_OCS2D_SOURCE.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_SOURCE.fid_ocs2d_millesime IS 'Clé étrangère vers la table TA_OCS2D_MILLESIME.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_RELATION_SOURCE.fid_ocs2d_source IS 'Clé étrangère vers la table TA_OCS2D_SOURCE pour connaitre la source de la zone OCS2D concernée.';

-- 8.3. Création de la clé primaire
ALTER TABLE 
	G_OCS2D.TA_OCS2D_RELATION_SOURCE
	ADD CONSTRAINT TA_OCS2D_RELATION_SOURCE_PK 
	PRIMARY KEY("OBJECTID")
	USING INDEX TABLESPACE "G_ADT_INDX";

-- 8.4. Création des clé étrangère
-- 8.4.1. vers la table TA_OCS2D
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE
	ADD CONSTRAINT TA_OCS2D_RELATION_SOURCE_fid_ocs2d_MILLESIME_FK
	FOREIGN KEY (fid_ocs2d_millesime)
	REFERENCES G_OCS2D.TA_OCS2D_MILLESIME(objectid);

-- 8.4.2. vers la table ta_ocs2d_source
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE
	ADD CONSTRAINT TA_OCS2D_RELATION_SOURCE_FID_COCS2D_SOURCE_FK
	FOREIGN KEY (fid_ocs2d_source)
	REFERENCES G_OCS2D.TA_OCS2D_SOURCE(objectid);

-- 8.5. Un polygone ne peut pas avoir deux fois la meme source
ALTER TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE 
ADD CONSTRAINT TA_OCS2D_RELATION_SOURCE_FID_OCS2D_MILLESIME_FID_OCS2D_SOURCE_UNIQUE
UNIQUE (FID_OCS2D_MILLESIME,FID_OCS2D_SOURCE);


/*
TABLE SE CONCENTRANT SUR L'INSERTION DE LA NOMCLATURE EN BASE
*/
-- 9. TA_OCS2D_FAMILLE
-- 9.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_FAMILLE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_FAMILLE_OBJECTID.NEXTVAL NOT NULL,
    valeur VARCHAR2(255) NOT NULL
);

-- 9.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_FAMILLE IS 'Table contenant les différentes nomenclature OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_FAMILLE.objectid IS 'Identifiant de chaque nomenclature de OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_FAMILLE.valeur IS 'Valeur de chaque nomenclature de libellés.';

-- 9.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_FAMILLE
ADD CONSTRAINT TA_OCS2D_FAMILLE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";


-- 10. TA_OCS2D_LIBELLE_LONG
-- 10.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE_LONG(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_LONG_OBJECTID.NEXTVAL NOT NULL,
    valeur VARCHAR2(255)
);

-- 10.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE_LONG IS 'Table regroupant les LIBELLEs long pouvant être pris par les LIBELLEs des nomenclatures OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_LONG.objectid IS 'Clé primaire de la table TA_OCS2D_LIBELLE_LONG.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_LONG.valeur IS 'Valeur pouvant être prises par les LIBELLEs de la nomenclature OCS2D.';

-- 10.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_LONG
ADD CONSTRAINT TA_OCS2D_LIBELLE_LONG_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";


-- 11. TA_OCS2D_LIBELLE
-- 11.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_OBJECTID.NEXTVAL NOT NULL,
    fid_libelle_long NUMBER(38,0) NOT NULL
);

-- 11.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE IS 'Table listant les LIBELLEs utilisé afin d''établir une hiérarchie.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE.objectid IS 'Identifiant de chaque libelle.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE.fid_libelle_long IS 'Clé étrangère vers la table TA_OCS2D_LIBELLE_LONG';

-- 11.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE
ADD CONSTRAINT TA_OCS2D_LIBELLE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 11.4. Création des clés étrangères
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE
ADD CONSTRAINT TA_OCS2D_LIBELLE_FID_LIBELLE_LONG_FK
FOREIGN KEY(FID_LIBELLE_LONG)
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE_LONG(objectid);

-- 11.5. Création de l'index de la clé étrangère
CREATE INDEX TA_OCS2D_LIBELLE_LONG_FID_LIBELLE_LONG_IDX ON TA_OCS2D_LIBELLE(fid_libelle_long)
TABLESPACE G_ADT_INDX;


-- 12. Creation de la table TA_OCS2D_FAMILLE_LIBELLE
-- 12.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_FAMILLE_LIBELLE_OBJECTID.NEXTVAL NOT NULL,
    fid_famille NUMBER(38,0) NOT NULL,
    fid_libelle NUMBER(38,0) NOT NULL
);

-- 12.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE IS 'Table contenant les identifiant des tables ta_ocs2d_LIBELLE et ta_ocs2d_nomenclature, permettant de joindre le libellé à sa nomenclature.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE.objectid IS 'Identifiant de chaque ligne.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE.fid_famille IS 'Identifiant de chaque famille de libellés - FK de la table ta_ocs2d_nomenclature.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE.fid_libelle IS 'Identifiant de chaque libellés - FK de la table ta_ocs2d_libelle.';

-- 12.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE
ADD CONSTRAINT TA_OCS2D_FAMILLE_LIBELLE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 12.4. Création des clés étrangères
-- 12.4.1. Vers la table TA_OCS2D_NOMCLATURE
ALTER TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE
ADD CONSTRAINT TA_OCS2D_FAMILLE_LIBELLE_FID_FAMILLE_FK
FOREIGN KEY("FID_FAMILLE")
REFERENCES G_OCS2D.TA_OCS2D_FAMILLE(objectid);

-- 12.4.4. Vers la table TA_OCS2D_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE
ADD CONSTRAINT TA_OCS2D_FAMILLE_LIBELLE_FID_LIBELLE_FK
FOREIGN KEY("FID_LIBELLE")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 12.5. Création de l'index de la clé étrangère
CREATE INDEX TA_OCS2D_FAMILLE_LIBELLE_FID_FAMILLE_IDX ON TA_OCS2D_FAMILLE_LIBELLE(fid_famille)
TABLESPACE G_ADT_INDX;

CREATE INDEX TA_OCS2D_FAMILLE_LIBELLE_FID_LIBELLE_IDX ON TA_OCS2D_FAMILLE_LIBELLE(fid_libelle)
TABLESPACE G_ADT_INDX;

-- 12.6. Un libelle ne peut pas avoir deux fois la meme famille
ALTER TABLE G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE 
ADD CONSTRAINT TA_OCS2D_FAMILLE_LIBELLE_FID_FAMILLE_FID_LIBELLE_UNIQUE
UNIQUE (FID_FAMILLE,FID_LIBELLE);

-- 13. Creation de la table TA_OCS2D_LIBELLE_COURT
-- 13.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE_COURT(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_COURT_OBJECTID.NEXTVAL NOT NULL,
    valeur VARCHAR2(255) NOT NULL
);

-- 13.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE_COURT IS 'Table regroupant les libelles court pouvant être pris par les LIBELLEs de la nomenclature OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_COURT.objectid IS 'Clé primaire de la table TA_OCS2D_LIBELLE_COURT.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_COURT.valeur IS 'Valeur coute pouvant être prises par les libelles de la nomenclature OCS2D.';

-- 13.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_COURT
ADD CONSTRAINT TA_OCS2D_LIBELLE_COURT_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";


-- 14. Creation de la table TA_OCS2D_LIBELLE_CORRESPONDANCE
-- 14.1. Création de la table
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_CORRESPONDANCE_OBJECTID.NEXTVAL NOT NULL,
    fid_libelle NUMBER(38,0) NOT NULL,
    fid_libelle_court NUMBER(38,0) NOT NULL
);

-- 14.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE IS 'Table contenant les identifiants des tables ta_ocs2d_libelle et ta_ocs2d_libelle_court, permettant de joindre les libelles à leur libellés courts.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE.objectid IS 'clé primaire de la table TA_OCS2D_LIBELLE_CORRESPONDANCE.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE.fid_libelle IS 'Identifiant des libelles.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE.fid_libelle_court IS 'Identifiant de chaque LIBELLE court - FK de la table ta_ocs2d_libelle_court.';

-- 14.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE
ADD CONSTRAINT TA_OCS2D_LIBELLE_CORRESPONDANCE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 14.4. Création des clés étrangères
-- 14.4.1. Vers la table TA_OCS2D_NOMCLATURE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE
ADD CONSTRAINT TA_OCS2D_LIBELLE_CORRESPONDANCE_FID_LIBELLE_FK
FOREIGN KEY("FID_LIBELLE")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 14.4.4. Vers la table TA_OCS2D_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE
ADD CONSTRAINT TA_OCS2D_LIBELLE_CORRESPONDANCE_FID_LIBELLE_COURT_FK
FOREIGN KEY("FID_LIBELLE_COURT")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE_COURT(objectid);

-- 14.5. Création de l'index de la clé étrangère
CREATE INDEX TA_OCS2D_LIBELLE_CORRESPONDANCE_FID_LIBELLE_IDX ON TA_OCS2D_LIBELLE_CORRESPONDANCE(fid_libelle)
TABLESPACE G_ADT_INDX;

CREATE INDEX TA_OCS2D_LIBELLE_CORRESPONDANCE_FID_LIBELLE_COURT_IDX ON TA_OCS2D_LIBELLE_CORRESPONDANCE(fid_libelle_court)
TABLESPACE G_ADT_INDX;

-- 12.6. Un libelle ne peut pas avoir deux fois la meme libelle court
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE 
ADD CONSTRAINT TA_OCS2D_LIBELLE_CORRESPONDANCE_FID_LIBELLE_FID_LIBELLE_COURT_UNIQUE
UNIQUE (FID_LIBELLE,FID_LIBELLE_COURT);


-- 15. TA_OCS2D_LIBELLE_RELATION
-- 15.1. Creation de la table
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_RELATION_OBJECTID.NEXTVAL NOT NULL,
    fid_libelle_fils NUMBER(38,0) NOT NULL,
    fid_libelle_parent NUMBER(38,0) NOT NULL
);

-- 15.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION IS 'Table qui sert à définir les relations entre les différents LIBELLEs des nomenclatures OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION.objectid IS 'Cle primaire de la table TA_OCS2D_LIBELLE_RELATION.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION.fid_libelle_fils IS 'Composante de la clé primaire. Clef étrangère vers la table TA_OCS2D_LIBELLE pour connaitre le libelle fils.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION.fid_libelle_parent IS 'Composante de la clé primaire. Clef étrangère vers la table TA_OCS2D_LIBELLE pour connaitre le libelle parent.';

-- 15.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 15.4. Création des clés étrangères
-- 15.4.1. Vers la table TA_OCS2D_NOMCLATURE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_FID_LIBELLE_FILS_FK
FOREIGN KEY("FID_LIBELLE_FILS")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 15.4.4. Vers la table TA_OCS2D_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_FID_LIBELLE_PARENT_FK
FOREIGN KEY("FID_LIBELLE_PARENT")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 15.5. Création de l'index de la clé étrangère
CREATE INDEX "G_OCS2D"."TA_OCS2D_LIBELLE_RELATION_FID_LIBELLE_FILS_IDX" ON "G_OCS2D"."TA_OCS2D_LIBELLE_RELATION" ("FID_LIBELLE_FILS") 
TABLESPACE G_ADT_INDX;

 CREATE INDEX "G_OCS2D"."TA_OCS2D_LIBELLE_RELATION_FID_LIBELLE_PARENT_IDX" ON "G_OCS2D"."TA_OCS2D_LIBELLE_RELATION" ("FID_LIBELLE_PARENT") 
TABLESPACE G_ADT_INDX;

-- 15.6. Un polygone ne peut pas avoir deux fois la meme relation
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION 
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_FID_LIBELLE_FILS_FID_LIBELLE_PARENT_UNIQUE
UNIQUE (FID_LIBELLE_FILS,FID_LIBELLE_PARENT);


-- 16.6. TA_OCS2D_LIBELLE_RELATION_FAMILLE
CREATE TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE(
    objectid NUMBER(38,0) DEFAULT SEQ_TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_OBJECTID.NEXTVAL NOT NULL,
    fid_libelle_cs NUMBER(38,0) NOT NULL,
    fid_libelle_us NUMBER(38,0) NOT NULL,
    fid_libelle_poste NUMBER(38,0) NOT NULL
);

-- 16.2. Création des commentaires
COMMENT ON TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE IS 'Table contenant les necessaires pour mettre en relation une combinaison cs/us avec son LIBELLE selon la nomenclature 4 ou 21 LIBELLEs OCS2D.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE.objectid IS 'Clé primaire de la table TA_OCS2D_LIBELLE_RELATION_FAMILLE.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE.fid_libelle_cs IS 'Identifiant du code couvert.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE.fid_libelle_us IS 'Identifiant du code usage.';
COMMENT ON COLUMN G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE.fid_libelle_poste IS 'Identifiant du poste.';

-- 16.3. Création de la clé primaire
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 16.4. Création des clés étrangères
-- 16.4.1. Vers la table TA_OCS2D_NOMCLATURE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_FID_LIBELLE_CS_FK
FOREIGN KEY("FID_LIBELLE_CS")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 16.4.2. Vers la table TA_OCS2D_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_FID_LIBELLE_US_FK
FOREIGN KEY("FID_LIBELLE_US")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 16.4.3. Vers la table TA_OCS2D_LIBELLE
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_FID_LIBELLE_POSTE_FK
FOREIGN KEY("FID_LIBELLE_POSTE")
REFERENCES G_OCS2D.TA_OCS2D_LIBELLE(objectid);

-- 16.5. Création de l'index de la clé étrangère
CREATE INDEX TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_LIBELLE_CS_IDX ON TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE(fid_libelle_cs)
TABLESPACE G_ADT_INDX;

CREATE INDEX TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_LIBELLE_US_IDX ON TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE(fid_libelle_us)
TABLESPACE G_ADT_INDX;

CREATE INDEX TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_FID_POSTE_IDX ON TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE(fid_libelle_poste)
TABLESPACE G_ADT_INDX;

-- 15.6. Un polygone ne peut pas avoir deux fois la meme relation
ALTER TABLE G_OCS2D.TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE 
ADD CONSTRAINT TA_OCS2D_LIBELLE_RELATION_NOMENCLATURE_FID_LIBELLE_CS_FID_LIBELLE_US_FID_LIBELLE_POSTE_UNIQUE
UNIQUE (FID_LIBELLE_CS,FID_LIBELLE_US,FID_LIBELLE_POSTE);