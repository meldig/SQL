/*
1. NORMALISATION DES DONNEES: 2005
*/

-- 1. Ajout de la colonne identity à la table ocs2d pour avoir des identifiant unique par polygone afin de permettre la normalisation des données.
-- 1.1 indiquer la sequence de la table ta_ocs2d
ALTER TABLE G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020
ADD IDENTITE INTEGER GENERATED BY DEFAULT AS IDENTITY
START WITH 1
INCREMENT BY 1
NOCACHE;
COMMIT;


-- 1.2 creation de objectid à partir de TA_OCS2D pour reprendre la suite de la numérotation.
MERGE INTO G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
USING
    (
	WITH CTE AS
	    (
	    SELECT
	        CASE 
	            WHEN max(objectid)IS NULL THEN 0
	            ELSE max(objectid)
	        END OBJECTID_MAX
	    FROM
	        G_OCS2D.TA_OCS2D
	    )
	    SELECT
	        a.OGR_FID AS OGR_FID,
	        CTE.objectid_max + ROWNUM AS objectid
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a,
	        CTE CTE
    )b
ON (a.ogr_fid = b.ogr_fid)
WHEN MATCHED THEN
UPDATE SET a.IDENTITE = b.objectid;
COMMIT;


-- 1.3. Suppression des metadonnees créé par OGR2OGR
DELETE FROM USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020';


-- 1.4. Suppression de l'index créé par OGR2OGR
SET SERVEROUTPUT ON
DECLARE
--  variable pour récuperer le nom de la séquence de la table.
    v_index VARCHAR2(200);
-- corp de la procédure.
BEGIN
-- recupere le nom de la sequence
    BEGIN
    SELECT 
    	a.INDEX_NAME INTO v_index
    FROM
    	ALL_INDEXES a
    WHERE
    	a.TABLE_OWNER = 'G_OCS2D'
	AND a.TABLE_NAME = 'TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020'
    AND a.ITYP_NAME = 'SPATIAL_INDEX'
    AND a.ITYP_OWNER = 'MDSYS';
    DBMS_OUTPUT.PUT_LINE('DROP INDEX ' || '"' || v_index || '"' || ';');
    END;
-- execution de la requete
    BEGIN  
        EXECUTE IMMEDIATE 'DROP INDEX ' || '"' || v_index || '"';
    END;
END;
/


-- 1.5 Mise à jour du SRID de la table dans la colonne GEOM
UPDATE G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
SET a.GEOM.SDO_SRID = 2154
WHERE a.GEOM IS NOT NULL;


-- 1.6. Creation des metadonnees
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 594000, 964000, 0.001),SDO_DIM_ELEMENT('Y', 6987000, 7165000, 0.001)), 
    2154
);
COMMIT;


-- 1.7. Création du nouvel index
CREATE INDEX TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020_SIDX
ON TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POLYGON, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');


-- 2. Insertion des géométrie dans la table TA_OCS2D_GEOM
-- 2.1. Insertion des données dans la table TA_OCS2D_GEOM
INSERT INTO G_OCS2D.TA_OCS2D_GEOM(GEOM)
SELECT 
    GEOM
FROM
    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
-- Selection des géométrie unique
WHERE
    IDENTITE not IN
        (SELECT id_b
            FROM
                (SELECT
                        a.IDENTITE AS id_a,
                        b.IDENTITE AS id_b
                    FROM
                        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a,
                        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 b
                    WHERE
                        a.IDENTITE < b.IDENTITE
                    AND
                        SDO_RELATE(a.GEOM, b.GEOM,'mask=equal') = 'TRUE'))
-- Ajout des géométries qui ne sont pas déjà présentes dans la table
AND
    IDENTITE not IN
        (SELECT
            a.IDENTITE
        FROM
            G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a,
            G_OCS2D.TA_OCS2D_GEOM b
        WHERE
            SDO_RELATE(a.GEOM, b.geom,'mask=equal') = 'TRUE')
;
COMMIT;


-- 2.2. Suppression de la séquence SEQ_TA_OCS2D_GEOM_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_GEOM_OBJECTID;


-- 2.3. Creation de la sequence SEQ_TA_OCS2D_GEOM_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant de la table TA_OCS2D_GEOM à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_GEOM;

    -- Création de la séquence du trigger pour SEQ_TA_OCS2D_GEOM_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_GEOM_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 3. Insertion des commentaires dans la table TA_OCS2D_COMMENTAIRE
-- 3.1 Insertion des commentaires dans la table
MERGE INTO G_OCS2D.TA_OCS2D_COMMENTAIRE a
USING
	(
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(comment05,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    comment05 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(comment05,'/',','), '([^,]*)(,|$)' )
	UNION
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(comment15,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    comment15 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(comment15,'/',','), '([^,]*)(,|$)' )
	UNION
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(comment20,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    comment20 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(comment20,'/',','), '([^,]*)(,|$)' )
	)b
ON(b.valeur = a.valeur)
WHEN NOT MATCHED THEN
INSERT (a.valeur)
VALUES (b.valeur)
;
COMMIT;


-- 3.2. Suppression de la séquence SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID;


-- 3.3. Creation de la sequence SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_COMMENTAIRE;

    -- Création de la séquence du trigger pour SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_COMMENTAIRE_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 4. Insertion des sources dans la table TA_OCS2D_SOURCE
-- 4.1. Insertion des sources dans la table TA_OCS2D_SOURCE
MERGE INTO G_OCS2D.TA_OCS2D_SOURCE a
USING
	(
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(source05,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    source05 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(source05,'/',','), '([^,]*)(,|$)' )
	UNION
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(source15,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    source15 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(source15,'/',','), '([^,]*)(,|$)' )
	UNION
	SELECT  
	    DISTINCT(TRIM(REGEXP_SUBSTR(replace(source20,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1))) AS VALEUR
	FROM
	    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 t
	WHERE
	    source20 IS NOT NULL
	CONNECT BY IDENTITE = PRIOR IDENTITE
	AND PRIOR SYS_GUID() IS NOT NULL
	AND LEVEL < REGEXP_COUNT(replace(source20,'/',','), '([^,]*)(,|$)' )
	)b
ON(b.valeur = a.valeur)
WHEN NOT MATCHED THEN
INSERT (a.valeur)
VALUES (b.valeur)
;
COMMIT;


-- 4.2. Suppression de la séquence SEQ_TA_OCS2D_SOURCE_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_SOURCE_OBJECTID;


-- 4.3. Creation de la sequence SEQ_TA_OCS2D_SOURCE_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_SOURCE;

    -- Création de la séquence SEQ_TA_OCS2D_SOURCE_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_SOURCE_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 5. Insertion des données dans la table TA_OCS2D
-- 5.1. Remplissage de la table
MERGE INTO G_OCS2D.TA_OCS2D a
USING
	(
	SELECT
		a.IDENTITE AS OBJECTID,
		b.OBJECTID AS FID_OCS2D_GEOM
	FROM
		G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a,
		G_OCS2D.TA_OCS2D_GEOM b
    WHERE
		SDO_RELATE(a.GEOM, b.GEOM,'mask=equal') = 'TRUE'
	)b
ON(a.OBJECTID = b.OBJECTID
AND a.FID_OCS2D_GEOM = b.FID_OCS2D_GEOM)
WHEN NOT MATCHED THEN
INSERT (a.OBJECTID, a.FID_OCS2D_GEOM)
VALUES (b.OBJECTID, b.FID_OCS2D_GEOM)
;
COMMIT;


-- 5.2. Suppression de la séquence SEQ_TA_OCS2D_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_OBJECTID;


-- 5.3. Creation de la sequence SEQ_TA_OCS2D_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D;

    -- Création de la séquence SEQ_TA_OCS2D_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 6. INSERTION DES DONNEESS DANS LA TABLE TA_OCS2D_MILLESIME
-- 6.1. 2005
MERGE INTO G_OCS2D.TA_OCS2D_MILLESIME a
USING
	(
	SELECT
	    a.objectid AS fid_ocs2d,
	    m.objectid AS FID_METADONNEE
	FROM
	    G_OCS2D.TA_OCS2D a,
	    G_GEO.TA_METADONNEE m
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
	                WHERE
	                    s.nom_source = 'OCS2D'
	                AND
	                    a.millesime = to_date('01/01/2005')
	                AND
	                    a.date_acquisition = to_date('18/12/2021')
	                AND
	                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.acronyme = 'CLS'
	                AND 
	                    e.valeur = 5000
		    		)
	)temp
ON(a.fid_ocs2d = temp.fid_ocs2d
AND a.fid_metadonnee = temp.fid_metadonnee)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d,a.fid_metadonnee)
VALUES(temp.fid_ocs2d,temp.fid_metadonnee)
;
COMMIT;


-- 6.2. 2015
MERGE INTO G_OCS2D.TA_OCS2D_MILLESIME a
USING
	(
	SELECT
	    a.objectid AS fid_ocs2d,
	    m.objectid AS FID_METADONNEE
	FROM
	    G_OCS2D.TA_OCS2D a,
	    G_GEO.TA_METADONNEE m
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
	                WHERE
	                    s.nom_source = 'OCS2D'
	                AND
	                    a.millesime = to_date('01/01/2015')
	                AND
	                    a.date_acquisition = to_date('18/12/2021')
	                AND
	                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.acronyme = 'CLS'
	                AND 
	                    e.valeur = 5000
		    		)
	)temp
ON(a.fid_ocs2d = temp.fid_ocs2d
AND a.fid_metadonnee = temp.fid_metadonnee)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d,a.fid_metadonnee)
VALUES(temp.fid_ocs2d,temp.fid_metadonnee)
;
COMMIT;


-- 6.3. 2020
MERGE INTO G_OCS2D.TA_OCS2D_MILLESIME a
USING
	(
	SELECT
	    a.objectid AS fid_ocs2d,
	    m.objectid AS FID_METADONNEE
	FROM
	    G_OCS2D.TA_OCS2D a,
	    G_GEO.TA_METADONNEE m
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
	                WHERE
	                    s.nom_source = 'OCS2D'
	                AND
	                    a.millesime = to_date('01/01/2020')
	                AND
	                    a.date_acquisition = to_date('18/12/2021')
	                AND
	                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.acronyme = 'CLS'
	                AND 
	                    e.valeur = 5000
		    		)
	)temp
ON(a.fid_ocs2d = temp.fid_ocs2d
AND a.fid_metadonnee = temp.fid_metadonnee)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d,a.fid_metadonnee)
VALUES(temp.fid_ocs2d,temp.fid_metadonnee)
;
COMMIT;


-- 6.4. Suppression de la séquence SEQ_TA_OCS2D_MILLESIME_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_MILLESIME_OBJECTID;


-- 6.5. Creation de la sequence SEQ_TA_OCS2D_MILLESIME_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_MILLESIME;

    -- Création de la séquence SEQ_TA_OCS2D_MILLESIME_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_MILLESIME_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 7. INSERTION DES DONNEES DANS LA TABLE TA_OCS2D_RELATION_LIBELLE

-- 7.1. INSERTION DES DONNEES LIEES A L'OCCUPATION ET A L'USAGE DES SOLS DANS LA TABLE TA_OCS2D
-- 7.1.1. 2005
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH CTE AS
	    (
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    cs.fid_libelle_niv_3 as fid_cs,
		    us.fid_libelle_niv_3 as fid_us
		FROM
		    TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_OCCUPATION cs ON cs."LIBELLE_COURT_NIV_3" = o.CS05
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_USAGE us ON us."LIBELLE_COURT_NIV_3" = o.US05
			INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2005')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
		)
		SELECT
		    fid_ocs2d_millesime AS fid_ocs2d_millesime,
		    valeur AS FID_LIBELLE,
		    colonne
		FROM 
			CTE
		UNPIVOT
		    (
		    valeur FOR (colonne) IN 
		    	(
			    fid_cs,
			    fid_us
			    )
			)
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_libelle = temp.fid_libelle)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_millesime,a.fid_libelle)
VALUES(temp.fid_ocs2d_millesime,temp.fid_libelle)
;
COMMIT;


-- 7.1.2. 2015
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH CTE AS
	    (
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    cs.fid_libelle_niv_3 as fid_cs,
		    us.fid_libelle_niv_3 as fid_us
		FROM
		   G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_OCCUPATION cs ON cs."LIBELLE_COURT_NIV_3" = o.CS15
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_USAGE us ON us."LIBELLE_COURT_NIV_3" = o.US15
			INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2015')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
		)
		SELECT
		    fid_ocs2d_millesime AS fid_ocs2d_MILLESIME,
		    valeur AS FID_LIBELLE,
		    colonne
		FROM 
			CTE
		UNPIVOT
		    (
		    valeur FOR (colonne) IN 
		    	(
			    fid_cs,
			    fid_us
			    )
			)
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_libelle = temp.fid_libelle)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_millesime,a.fid_libelle)
VALUES(temp.fid_ocs2d_millesime,temp.fid_libelle)
;
COMMIT;


-- 7.1.3. 2020
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH CTE AS
	    (
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    cs.fid_libelle_niv_3 as fid_cs,
		    us.fid_libelle_niv_3 as fid_us
		FROM
		    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_OCCUPATION cs ON cs."LIBELLE_COURT_NIV_3" = o.CS20
			LEFT JOIN G_OCS2D.V_NOMENCLATURE_OCS2D_USAGE us ON us."LIBELLE_COURT_NIV_3" = o.US20
			INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2020')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
		)
		SELECT
		    fid_ocs2d_millesime AS fid_ocs2d_MILLESIME,
		    valeur AS FID_LIBELLE,
		    colonne
		FROM 
			CTE
		UNPIVOT
		    (
		    valeur FOR (colonne) IN 
		    	(
			    fid_cs,
			    fid_us
			    )
			)
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_libelle = temp.fid_libelle)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_millesime,a.fid_libelle)
VALUES(temp.fid_ocs2d_millesime,temp.fid_libelle)
;
COMMIT;


-- 7.2. INSERTION DES DONNEES LIEES AUX INDICES DANS LA TABLE TA_OCS2D_RELATION_LIBELLE
-- 7.2.1. 2005
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH INDICE AS
		(
		SELECT
			a.OBJECTID AS FID_INDICE,
			c.valeur AS INDICE
		FROM
			G_OCS2D.TA_OCS2D_LIBELLE a
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE b ON b.fid_libelle = a.OBJECTID
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_COURT c ON c.OBJECTID = b.fid_libelle_court
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_LONG d ON d.objectid = a.fid_libelle_long
			INNER join G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE e on e.fid_libelle = a.objectid
			inner join G_OCS2D.TA_OCS2D_FAMILLE f ON f.objectid = e.fid_famille
		WHERE
			upper(f.valeur) = upper('Indice de confiance à la photo-interprétation OCS2D')
		)
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    indice.fid_indice as fid_libelle
		FROM
		    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
		    INNER JOIN INDICE indice ON indice.indice = o.indice05
		    INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2005')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
	)temp
ON(a.fid_ocs2d_MILLESIME = temp.fid_ocs2d_MILLESIME
AND a.FID_LIBELLE = temp.FID_LIBELLE)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_MILLESIME,a.FID_LIBELLE)
VALUES(temp.fid_ocs2d_MILLESIME,temp.FID_LIBELLE)
;
COMMIT;


-- 7.2.2. 2015
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH INDICE AS
		(
		SELECT
			a.OBJECTID AS FID_INDICE,
			c.valeur AS INDICE
		FROM
			G_OCS2D.TA_OCS2D_LIBELLE a
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE b ON b.fid_libelle = a.OBJECTID
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_COURT c ON c.OBJECTID = b.fid_libelle_court
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_LONG d ON d.objectid = a.fid_libelle_long
			INNER join G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE e on e.fid_libelle = a.objectid
			inner join G_OCS2D.TA_OCS2D_FAMILLE f ON f.objectid = e.fid_famille
		WHERE
			upper(f.valeur) = upper('Indice de confiance à la photo-interprétation OCS2D')
		)
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    indice.fid_indice as fid_libelle
		FROM
		    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
		    INNER JOIN INDICE indice ON indice.indice = o.indice15
		    INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2015')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
	)temp
ON(a.fid_ocs2d_MILLESIME = temp.fid_ocs2d_MILLESIME
AND a.FID_LIBELLE = temp.FID_LIBELLE)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_MILLESIME,a.FID_LIBELLE)
VALUES(temp.fid_ocs2d_MILLESIME,temp.FID_LIBELLE)
;
COMMIT;


-- 7.2.3. 2020
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_LIBELLE a
USING
	(
	WITH INDICE AS
		(
		SELECT
			a.OBJECTID AS FID_INDICE,
			c.valeur AS INDICE
		FROM
			G_OCS2D.TA_OCS2D_LIBELLE a
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_CORRESPONDANCE b ON b.fid_libelle = a.OBJECTID
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_COURT c ON c.OBJECTID = b.fid_libelle_court
			INNER JOIN G_OCS2D.TA_OCS2D_LIBELLE_LONG d ON d.objectid = a.fid_libelle_long
			INNER join G_OCS2D.TA_OCS2D_FAMILLE_LIBELLE e on e.fid_libelle = a.objectid
			inner join G_OCS2D.TA_OCS2D_FAMILLE f ON f.objectid = e.fid_famille
		WHERE
			upper(f.valeur) = upper('Indice de confiance à la photo-interprétation OCS2D')
		)
		SELECT
		    mo.objectid AS fid_ocs2d_millesime,
		    indice.fid_indice as fid_libelle
		FROM
		    G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 o
		    INNER JOIN INDICE indice ON indice.indice = o.indice20
		    INNER JOIN G_OCS2D.TA_OCS2D a ON a.objectid = o.identite
			INNER JOIN G_OCS2D.TA_OCS2D_MILLESIME mo ON mo.fid_ocs2d = a.objectid
			INNER JOIN G_GEO.TA_METADONNEE m on m.OBJECTID = mo.FID_METADONNEE
	    WHERE
	        m.objectid IN
	                (
	                SELECT
	                    m.objectid
	                FROM
	                    G_GEO.TA_METADONNEE m
	                INNER JOIN G_GEO.TA_SOURCE s ON s.OBJECTID = m.FID_SOURCE
	                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.OBJECTID = m.FID_ACQUISITION
	                INNER JOIN G_GEO.TA_PROVENANCE p ON p.OBJECTID = m.FID_PROVENANCE
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ORGANISME o ON o.OBJECTID = mo.FID_ORGANISME
	                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.FID_METADONNEE = m.OBJECTID
	                LEFT JOIN G_GEO.TA_ECHELLE e ON e.OBJECTID = me.FID_ECHELLE
	                WHERE
	                    s.NOM_SOURCE = 'OCS2D'
	                AND
	                    a.MILLESIME = to_date('01/01/2020')
	                AND
	                    a.DATE_ACQUISITION = to_date('18/12/2021')
	                AND
	                    p.URL = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
	                AND
	                    p.METHODE_ACQUISITION = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
	                AND
	                    o.ACRONYME = 'CLS'
	                AND 
	                    e.VALEUR = 5000
	                )
	)temp
ON(a.fid_ocs2d_MILLESIME = temp.fid_ocs2d_MILLESIME
AND a.FID_LIBELLE = temp.FID_LIBELLE)
WHEN NOT MATCHED THEN
INSERT(a.fid_ocs2d_MILLESIME,a.FID_LIBELLE)
VALUES(temp.fid_ocs2d_MILLESIME,temp.FID_LIBELLE)
;
COMMIT;


-- 7.3. Suppression de la séquence SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID;


-- 7.4. Creation de la sequence SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_RELATION_LIBELLE;

    -- Création de la séquence du trigger pour SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_RELATION_LIBELLE_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /


-- 8. INSERTION DES DONNEES DANS LA TABLE G_OCS2D.TA_OCS2D_RELATION_SOURCE
-- 8.1. 2005
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_SOURCE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(source05,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	source05 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(source05,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_source
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_SOURCE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2005')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_source = temp.fid_ocs2d_source)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_source)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_source);
COMMIT;


-- 8.2. 2015
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_SOURCE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(source15,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	source15 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(source15,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_source
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_SOURCE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2015')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_source = temp.fid_ocs2d_source)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_source)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_source);
COMMIT;


-- 8.3. 2020
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_SOURCE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(source20,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	source20 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(source20,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_source
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_SOURCE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2020')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_source = temp.fid_ocs2d_source)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_source)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_source);
COMMIT;


--8.4. Suppression de la séquence SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID;


-- 8.5. Creation de la sequence SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_RELATION_SOURCE;

    -- Création de la séquence du trigger pour SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_RELATION_SOURCE_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /

-- 9. INSERTION DES DONNEES DANS LA TABLE G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE
-- 9.1. 2005
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(comment05,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	comment05 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(comment05,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_commentaire
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_COMMENTAIRE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2005')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_commentaire = temp.fid_ocs2d_commentaire)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_commentaire)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_commentaire);
COMMIT;


-- 8.2. 2015
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(comment15,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	comment15 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(comment15,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_commentaire
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_COMMENTAIRE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2015')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_commentaire = temp.fid_ocs2d_commentaire)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_commentaire)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_commentaire);
COMMIT;


-- 8.3. 2020
MERGE INTO G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE a
USING
	(
	-- selection des différentes sources
	WITH CTE AS
	    (
	    SELECT DISTINCT
	        a.IDENTITE AS IDENTITE,
	        TRIM(REGEXP_SUBSTR(replace(comment20,'/',','), '([^,]*)(,|$)', 1, LEVEL, NULL, 1)) AS value
	    FROM
	        G_OCS2D.TEMP_OCS2D_MEL_MULTIDATE_2005_2015_2020 a
	    WHERE
	    	comment20 IS NOT NULL
	    CONNECT BY identite = PRIOR identite
	    AND PRIOR SYS_GUID() IS NOT NULL
	    AND LEVEL < REGEXP_COUNT(replace(comment20,'/',','), '([^,]*)(,|$)' )
	    )
	    -- selection des objectid de la table millesime
	    SELECT
	    	a.objectid as fid_ocs2d_millesime,
            cte.value,
            c.valeur,
            c.objectid as fid_ocs2d_commentaire
	    FROM
	    	G_OCS2D.TA_OCS2D_MILLESIME a
		INNER JOIN G_OCS2D.TA_OCS2D b ON b.objectid = a.fid_ocs2d
	    INNER JOIN CTE ON cte.IDENTITE = b.objectid
	    INNER JOIN G_GEO.TA_METADONNEE m ON m.objectid = a.fid_metadonnee
        INNER JOIN G_OCS2D.TA_OCS2D_COMMENTAIRE c ON c.valeur = cte.value
		WHERE
        m.objectid IN
                (
                SELECT
                    m.objectid
                FROM
                    G_GEO.TA_METADONNEE m
                INNER JOIN G_GEO.TA_SOURCE s ON s.objectid = m.fid_source
                INNER JOIN G_GEO.TA_DATE_ACQUISITION a ON a.objectid = m.fid_acquisition
                INNER JOIN G_GEO.TA_PROVENANCE p ON p.objectid = m.fid_provenance
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ORGANISME mo ON mo.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ORGANISME o ON o.objectid = mo.fid_organisme
                LEFT JOIN G_GEO.TA_METADONNEE_RELATION_ECHELLE me ON me.fid_metadonnee = m.objectid
                LEFT JOIN G_GEO.TA_ECHELLE e ON e.objectid = me.fid_echelle
                WHERE
                    s.nom_source = 'OCS2D'
                AND
                    a.millesime = to_date('01/01/2020')
                AND
                    a.date_acquisition = to_date('18/12/2021')
                AND
                    p.url = 'https://cloud.sirs-fr.com/index.php/s/MGSLBai7pweRXLJ'
                AND
                    p.methode_acquisition = 'Donnée OCS2D finale corrigée par CLS. Téléchargée depuis le serveur CLS, disponible également sur le serveur infogeo, donnée externe, CLS sous le nom OCS2d_mel_Multidate_2005_2015_2020'
                AND
                    o.acronyme = 'CLS'
                AND 
                    e.valeur = 5000
			    )
	)temp
ON(a.fid_ocs2d_millesime = temp.fid_ocs2d_millesime
AND a.fid_ocs2d_commentaire = temp.fid_ocs2d_commentaire)
WHEN NOT MATCHED THEN
INSERT (a.fid_ocs2d_millesime,a.fid_ocs2d_commentaire)
VALUES (temp.fid_ocs2d_millesime,temp.fid_ocs2d_commentaire);
COMMIT;


--8.4. Suppression de la séquence SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID
DROP SEQUENCE SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID;


-- 8.5. Creation de la sequence SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID avec la bonne incrémentation de départ.
SET SERVEROUTPUT ON
DECLARE
    v_new_id NUMBER(38,0);

    BEGIN
    -- Sélection de l'identifiant à partir duquel faire reprendre l'incrémentation
        SELECT
            MAX(OBJECTID) + 1
            INTO v_new_id
        FROM
            G_OCS2D.TA_OCS2D_RELATION_COMMENTAIRE;

    -- Création de la séquence du trigger pour SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID
        EXECUTE IMMEDIATE 'CREATE SEQUENCE SEQ_TA_OCS2D_RELATION_COMMENTAIRE_OBJECTID INCREMENT BY 1 START WITH ' || v_new_id;
    END;

    /