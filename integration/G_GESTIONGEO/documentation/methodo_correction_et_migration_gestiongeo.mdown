# Correction et Migration des données GestionGeo de Oracle 11g vers Oracle 12c

## Contexte :
En raison de la disparition de flash des navigateurs internet, on ne peut plus continuer d'utiliser l'outil DynMap pour créer des dossiers de récolement et/ou d'investigation complémentaire,
servant à mettre à jour le plan topo fin. Il a donc été décidé que la saisie de ces dossiers se ferait via qgis et fme. 
De plus, étant donné que nous sommes en pleine transition d'oracle 11g vers oracle 12c, il a été décidé de migrer les tables gestiongeo directement vers oracle 12c et d'en profiter pour corriger les doublons de numéro de dossier (différents de leurs identifiants), les erreurs de géométrie des périmètres des dossiers et les dossiers n'ayant pas de périmètre.
La méthode utilisée pour faire cette migration d'une version d'Oracle vers une autre est expliquée ci-dessous.

## Objectifs :
1. Corriger les doublons de DOS_NUM et les erreurs de géométrie dans TA_GG_GEO ainsi que les erreurs de noms de TA_GG_DOSSIER ;
2. Migrer les données d'Oracle 11g vers Oracle 12c et y remplir les tables finales ;

## Etapes :
Les étapes listées ci-dessous sont celles qu'il faut suivre, **dans l'ordre**, pour corriger et migrer les données GestionGeo d'oracle 11g vers oracle 12c.  

1. Vérifier la présence de doublons de DOS_NUM dans *TA_GG_GEO* ;
2. Corriger les doublons ;
3. Mise à jour de la table de comparaison ;
4. Duplicatat des tables *TA_GG_DOSSIER* et *TA_GG_GEO* afin d'y corriger les données ; 
5. Correction des données dans les tables temporaires d'oracle 11g ;
6. Récupération des URLS dans APPLI_GG par Romain et export de la table dans Oracle 12c ;
7. Création de la structure des tables dans oracle 12c ;
8. Import des données d'Oracle 11g vers Oracle 12c ;
9. Remplissage des tables finales dans Oracle 12c ;
10. Suppression des tables temporaires dans Oracle 11g et Oracle 12c ;

## Sommaire :
1. Vérifier la présence de doublons de DOS_NUM dans TA_GG_GEO ;
2. Mise à jour de la table de comparaison permettrant de traiter les doublons ;
3. Création des tables temporaires de correction ;
4. Correction des données dans oracle 11g ;
    4.1. Suppression de certains périmètres
    4.2. Correction des erreurs de géométrie
    4.3. Fusion des polygones de *TEMP_TA_GG_GEO* disposant du même *DOS_NUM* (appartenant donc au même dossier)
    4.4. Suppression des entités ayant servi à la fusion, sauf celles dont la géométrie a été mise à jour par la requête précédente (cf. point 4.3)
    4.5. Passage de certains dossiers/périmètres en clôturés
    4.6. Création d'un nouveau dossier dans *TA_GG_DOSSIER*
    4.7. Harmonisation des pnoms de la table TA_GG_SOURCE contenant les pnoms des agents
    4.8. Correction du champ *TA_GG_DOSSIER.USER_ID* rempli en erreur par l'application
5. Vérification du bon déroulé des corrections des données
6. Création de la structure des tables dans oracle 12c ;
7. Import des données d'Oracle 11g vers Oracle 12c ;
8. Remplissage des tables finales dans Oracle 12c ;
9. Suppression des tables temporaires ;

## Outils :
### Les codes sql :
* ![maj_ta_geo_correct_doublons.sql](/../correction_des_donnees/maj_ta_geo_correct_doublons.sql) ;
* ![creation_tables_de_correction.sql](/../correction_des_donnees/creation_tables_de_correction.sql) ;
* ![correction_donnees_gestiongeo.sql](/../correction_des_donnees/correction_donnees_gestiongeo.sql) ;
* ![code_ddl_g_gestiongeo.sql](/../creation_tables_finales/code_ddl_g_gestiongeo.sql) ;
* ![remplissage_tables_finales_gestiongeo.sql](/../remplissage_tables_finales/remplissage_tables_finales_gestiongeo.sql) ;
* ![suppression_tables_temporaires_oracle12c.sql](/../suppression_tables_temporaires/suppression_tables_temporaires_oracle12c.sql) ;
* ![suppression_tables_temporaires_oracle11g.sql](/../suppression_tables_temporaires/suppression_tables_temporaires_oracle11g.sql) ;

### Les .bat :
* ![lanceur_maj_ta_geo_correct_doublons.bat](/../correction_des_donnees/lanceur_maj_ta_geo_correct_doublons.bat) ;
* ![lanceur_du_code_de_correction_des_donnees_gestiongeo.bat](/../correction_des_donnees/lanceur_du_code_de_correction_des_donnees_gestiongeo.bat) ;
* ![lanceur_du_code_ddl_gestiongeo.bat](/../creation_tables_finales/lanceur_du_code_ddl_gestiongeo.bat) ;
* ![import_des_tables_gestiongeo.bat](/../import_des_donnees/import_des_tables_gestiongeo.bat) ;
* ![lanceur_du_remplissage_des_tables_finales.bat](/../remplissage_tables_finales/lanceur_du_remplissage_des_tables_finales.bat) ;
* ![lanceur_suppression_tables_temporaires_oracle12c.bat](/../suppression_tables_temporaires/lanceur_suppression_tables_temporaires_oracle12c.bat) ;
* ![lanceur_suppression_tables_temporaires_oracle11g.bat](/../suppression_tables_temporaires/lanceur_suppression_tables_temporaires_oracle11g.bat) ;

## Etape n°1. Vérifier la présence de doublons de DOS_NUM dans TA_GG_GEO ;

Pour faire cette vérification, veuillez utiliser la requête ci-dessous :
``` SQL
-- Vérification des doublons DOS_NUM dans TA_GG_GEO et de l'absence de ces DOS_NUM dans TA_GEO_CORRECT_DOUBLONS
WITH 
    C1 AS(
    SELECT
        a.DOS_NUM,
        COUNT(a.DOS_NUM) AS Nbr_Doublons
    FROM
        GEO.TA_GG_GEO a
    GROUP BY a.DOS_NUM
    HAVING
        COUNT(a.DOS_NUM) > 1
    )
    SELECT DISTINCT
        a.DOS_NUM,
        a.Nbr_Doublons
    FROM
        C1 a
    WHERE
        a.DOS_NUM NOT IN (SELECT b.DOS_NUM FROM TA_GEO_CORRECT_DOUBLONS b);
```

Si la requête renvoie un résultat, c'est qu'il y a un ou des doublons (le dossier ayant le DOS_NUM *213500004* est traité plus bas). Dans ce cas, proccédez à l'étape 2, sinon ou si ce doublon est déjà traité dans le fichier *correction_donnees_gestiongeo.sql*, proccédez à l'étape 3.

## Etape n°2. Corriger les doublons ;

### 2.1. Quelle action pour quel type de doublon ?

Pour savoir si les doublons peuvent être fusionnés ou pas, il faut faire une vérification visuelle dans qgis. Voici les cas que vous pouvez rencontrer et les actions à réaliser :

* **Si les doublons se situent dans la même commune :** il faut les fusionner. Il faut pour cela mettre à jour la table *TA_GEO_CORRECT_DOUBLONS*, ce qui est fait par le fichier ![maj_ta_geo_correct_doublons.sql](/../correction_des_donnees/maj_ta_geo_correct_doublons.sql) et qui est détaillé au point 2.2 ;  

* **Si les doublons se situent sur deux communes différentes :** il faut faire un nouveau dossier dans *TA_GG_DOSSIER* et le faire correspondre à l'un des doublons dans *TA_GG_GEO*. Cela se fait en implémentant le code du point 5 du fichier ![correction_donnees_gestiongeo.sql](/../correction_des_donnees/correction_donnees_gestiongeo.sql) ;  

* **Si les doublons sont jointifs et se situent à cheval sur la limite communale :** il faut fusionner, car on ne peut pas modifier un périmètre. Il faut pour cela mettre à jour la table *TA_GEO_CORRECT_DOUBLONS*, ce qui est fait par le fichier ![maj_ta_geo_correct_doublons.sql](/../correction_des_donnees/maj_ta_geo_correct_doublons.sql) et qui est détaillé au point 2.2 ;

En cas de doute, vous pouvez contacter la personne référente sur ce sujet (Gaëlle).

### 2.2. Mise à jour de la table de comparaison ;

Pour faire cette mise à jour, veuillez utiliser le fichier ![maj_ta_geo_correct_doublons.sql](/../correction_des_donnees/maj_ta_geo_correct_doublons.sql).
**Cependant avant de le lancer**, veuillez remplacer les valeurs de la condition *a.DOS_DOSNUM IN ()* par celles que vous avez identifées ou celles renvoyées par la personne référente (cf. étape 2.1), c'est-à-dire les doublons présents sur une même commune ou jointifs et à cheval sur la limite communale.  

Une fois le code implémenté, vous pouvez mettre à jour la table *TA_GEO_CORRECT_DOUBLONS* via le .bat ![lanceur_maj_ta_geo_correct_doublons.bat](/../correction_des_donnees/lanceur_maj_ta_geo_correct_doublons.bat).  

La table *TA_GEO_CORRECT_DOUBLONS* se compose de périmètres à fusionner, tagués en "fusion", et d'autres pas, tagués en "2 communes différentes", comme dans l'exemple ci-dessous. Le premier cas est géré lors de la correction des données par le fichier ![correction_donnees_gestiongeo.sql](/../correction_des_donnees/correction_des_donnees/correction_donnees_gestiongeo.sql). Le deuxième cas nécessite de créer un nouveau dossier et de lui affecter l'un de périmètre en question (cf. étape 2.1 partie *Si les doublons se situent sur deux communes différentes*).

### Exemple :
``` tsv
DOS_NUM	Nbr_Doublons	
101960145	4	fusion
102860526	2	fusion
103280549	3	fusion
103030163	2	fusion
203860513	8	fusion
203600428	2	fusion
170090076	9	Fusion
163280679	8	fusion
163281074	2	fusion
202990438	2	fusion
103160408	2	fusion
102020497	4	2 communes différentes
102860525	7	fusion
202790509	2	fusion
200900515	2	2 communes différentes
205990488	2	fusion
103500394	2	fusion
103280411	2	fusion
161961077	3	fusion
103430570	2	fusion
205990489	2	fusion
102860124	3	fusion
102860531	2	fusion
102560032	3	2 COMMUNES DIFFERENTES
```

## Etape n°3. Création des tables temporaires de correction ;
Cette étape permet d'enregistrer les données des tables *TA_GG_DOSSIER* et *TA_GG_GEO* dans des tables temporaires afin de ne faire les corrections que sur des tables qui ne sont pas utilisées pour la production. On pourra donc toujours retrouver l'état original des données (précédent la correction) dans *TA_GG_DOSSIER* et *TA_GG_GEO*.  
Pour cela, il suffit de lancer le .bat ![lanceur_creation_tables_de_correction.bat](/../correction_des_donnees/lanceur_creation_tables_de_correction.bat) qui effectuera les requêtes du fichier ![creation_tables_de_correction.bat](/../correction_des_donnees/creation_tables_de_correction.sql).  
Précisons qu'il s'agit ici d'un code DDL, le code DML de correction des données sera lancé au point suivant et portera **UNIQUEMENT** sur les tables temporaires.

## Etape n°4. Correction des données dans oracle 11g ;

Cette correction se fait grâce au fichier ![correction_donnees_gestiongeo.sql](/../correction_des_donnees/correction_donnees_gestiongeo.sql), lui-même lancé par le fichier ![correction_donnees_gestiongeo.sql](/../correction_des_donnees/lanceur_du_code_de_correction_donnees_gestiongeo.bat).  
Les sous-parties suivantes suivent celles du fichier *correction_donnees_gestiongeo.sql* pour vous permettre de vous repérer.

### 4.1. Suppression de certains périmètres
Les périmètres en question ont été confirmés par la personne référente des dossiers des géomètres comme étant à supprimer (cf. Dossier_doublons.xlsx).

### 4.2. Correction des erreurs de géométrie
Cette correction se fait dans un ordre bien particulier puisque certains polygones sont concernés par plusieurs erreurs et que la rectification d'une erreur peut en résoudre ou en provoquer une autre. Ces corrections organisées de cette manière ont permis de corriger toutes les erreurs de géométrie de *TA_GG_GEO*. Ainsi les fusions qui suivront se feront sur des géométries correctes/valides.

### 4.3. Fusion des polygones de *TEMP_TA_GG_GEO* disposant du même *DOS_NUM* (appartenant donc au même dossier)
C'est la partie qui fusionne toutes les géométries d'un même dossier en utilisant la table *TA_GEO_CORRECT_DOUBLONS* renseignée à l'étape n°2.  Elle utilise un *MERGE INTO ... USING... ON(...) WHEN MATCHED THEN...* :

* le Using : il se fait via une *CTE* qui, dans un premier temps (cf. *C_1*), sélectionne toutes les données de *TA_GG_GEO* (sauf leur géométrie) dont les ID_GEOM sont dans *TA_GEO_CORRECT_DOUBLONS*. Ce sont ces entités dont nous allons éditer la géométrie. Cela nous permet d'éviter d'avoir à créer de nouveaux dossiers. Ensuite, dans la partie *C_2* nous faisons la fusion de toutes les géométries par dossier dont le *DOS_NUM* se situe dans la sélection du *C_1*. Enfin la requête principale permet de rassembler les données renvoyées par *C_1* et *C_2* en faisant une condition sur le *DOS_NUM* (numéro de dossier).
* La condition du *merge* se fait sur l'ID_GEOM et nous permet de modifier la géométrie de toutes les entités de *TA_GG_GEO* taguées en *fusion* dans *TA_GEO_CORRECT_DOUBLONS*.

#### Conclusion :
- Nous avons désormais, et pour chaque dossier tagué "fusion" dans *TA_GEO_CORRECT_DOUBLONS*, une entité présente dans *TA_GG_GEO* qui contient la fusion de toutes les géométries du dossier. Il faut maintenant supprimer les doublons qui ont servi à cette fusion.

### 4.4. Suppression des entités ayant servi à la fusion, sauf celles dont la géométrie a été mise à jour par la requête précédente (cf. point 4.3)
Pour faire cette suppression nous faisons deux conditions dans le *WHERE* :
1. Nous sélectionnons toutes les entités de *TA_GG_GEO* dont le DOS_NUM se situe dans *TA_GEO_CORRECT_DOUBLONS*, ainsi j'ai tous les objets concernés par la fusion ;
2. Pour tous les objets remplissant la première condition, je sélectionne tous les ID_GEOM (identifiant) absents de *TA_GEO_CORRECT_DOUBLONS*. La sélection se fait bien entendu sur les objets remplissant ces deux conditions. Ainsi j'obtiens tous les objets ayant servis à la fusion de chaque dossier, sauf celui dont la géométrie contient cette fusion.

### 4.5. Création d'un nouveau dossier dans *TA_GG_DOSSIER*
Dans *TA_GG_GEO* se trouve deux périmètres qu'il faut garder (vu avec gaëlle), mais dont l'ID_DOS est le même. C'est donc l'équivalent d'un doublon de dossier. Nous avons donc décidé de créer un nouveau dossier via un insert.  
Ensuite, l'un des périmètres se voit attribuer l'*ID_DOS* du dossier nouvellement créé.

### 4.6. Correction ds faux-doublons du champ *TEMP_TA_GG_DOSSIER.DOS_ENTR*
L'objectif de cette requête est d'avoir une seule occurrence d'une entreprise, peu importe son orthographe. Ainsi au lieu d'avoir ' .ETUDIS', ' ETUDIS','ETUDIS', nous aurons simplement 'ETUDIS'. 

### 4.7. Harmonisation des pnoms de la table TA_GG_SOURCE contenant les pnoms des agents
Cette partie est actuellement en commentaire, puisque les pnoms ont déjà été passé en production sur oracle 12c pour les points de vigilance et OCS2D.  
Elle avait pour but de mettre tous les pnoms en minuscule et de supprimer les espaces avant et après, ainsi que d'ajouter les pnoms des gestionnaires de données pour leur perdre d'intervenir sur la donnée en cas de besoin (**nécessaire**).

### 4.8. Correction du champ *TA_GG_DOSSIER.USER_ID* rempli en erreur par l'application
Il se trouve que parfois un bug de DynMap attribue la modification d'un dossier à un agent inexistant. Pour y remédier nous attribuons au champ *USER_ID* le pnom de l'agent ayant créé le dossier, de façon certes arbitraire, mais cependant fondée puisqu'un dossier est le plus souvent suivi par l'agent qui l'a créé.

## 5. Vérification du bon déroulé des corrections des données
Pour vérifier que les corrections se sont bien passées veuillez lancer les codes ci-dessous. S'ils ne renvoient aucun résultat, c'est que les corrections se sont bien passées.
``` SQL
-- Vérification des doublons DOS_NUM dans TA_GG_GEO
SELECT
    a.DOS_NUM,
    COUNT(a.DOS_NUM) AS Nbr_Doublons
FROM
    GEO.TEMP_TA_GG_GEO a
GROUP BY a.DOS_NUM
HAVING
    COUNT(a.DOS_NUM) > 1; 

-- Vérification des doublons ID_DOS dans TA_GG_GEO
SELECT
    a.ID_DOS,
    COUNT(a.ID_DOS) AS Nbr_Doublons
FROM
    GEO.TEMP_TA_GG_GEO a
GROUP BY a.ID_DOS
HAVING
    COUNT(a.ID_DOS) > 1;

-- Sélection du nombre de polygones par type d'erreur
SELECT
    SUBSTR(SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(a.geom, 0.005), 0, 5) AS ERREUR,
    COUNT(SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(a.geom, 0.005)) AS Nombre
FROM
    GEO.TEMP_TA_GG_GEO a
WHERE
    SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(a.geom, 0.005)<>'TRUE'
GROUP BY
    SUBSTR(SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(a.geom, 0.005), 0, 5);

-- Vérification des doublons ID_DOS dans TA_GG_DOSSIER
SELECT
    a.ID_DOS,
    COUNT(a.ID_DOS) AS Nbr_Doublons
FROM
    GEO.TEMP_TA_GG_DOSSIER a
GROUP BY a.ID_DOS
HAVING
    COUNT(a.ID_DOS) > 1;
```

## 6. Création de la structure des tables dans oracle 12c ;
Le code du fichier ![code_ddl_g_gestiongeo.sql](/creation_tables_finales/code_ddl_g_gestiongeo.sql) qui créé les tables finales dans Oracle 12c peut être lancé directement depuis le .bat ![lanceur_du_code_ddl_gestiongeo.bat](/creation_tables_finales/lanceur_du_code_ddl_gestiongeo.bat).
Ce code doit être exécuté avant l'import des données d'Oracle 11g vers Oracle 12c puisque j'y créé les métadonnées spatiales de la table TEMP_TA_GG_GEO. Cette création évite des erreurs lors de l'import.

## 7. Import des données d'Oracle 11g vers Oracle 12c ;
L'import se fait grâce au .bat ![import_des_tables_gestiongeo.bat](/import_des_donnees/import_des_tables_gestiongeo.bat). Il n'y a aucune modification à faire.

## 8. Remplissage des tables finales dans Oracle 12c ;
Le remplissage se fait via le code ![remplissage_tables_finales_gestiongeo.sql](/remplissage_tables_finales/remplissage_tables_finales_gestiongeo.sql) qui peut être lancé via le .bat ![remplissage_tables_finales_gestiongeo.sql](/remplissage_tables_finales/lanceur_du_remplissage_des_tables_finales.bat) (le .bat n'a pas été testé).

## 9. Suppression des tables temporaires
Une fois les tables finales remplies, vérifiées et validées, vous pouvez supprimer les tables temporaires dans oracle 11g et oracle 12c via les .bat ![lanceur_suppression_tables_temporaires_oracle12c.bat](//suppression_tables_temporaires/lanceur_suppression_tables_temporaires_oracle12c.bat) et ![lanceur_suppression_tables_temporaires_oracle11g.bat](//suppression_tables_temporaires/lanceur_suppression_tables_temporaires_oracle11g.bat).  
La table *TA_GEO_CORRECT_DOUBLON* sera quant à elle conservée un peu plus longtemps avant d'être elle aussi supprimée.