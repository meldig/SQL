-- Fichier SQL contenant les requetes necessaires pour corriger les chemins des dossiers IC et RECOL

-- 1. CREATION D UNE COLONNE DE CLE PRIMARE
-- 1.1. SUPPRESSION DE LA COLONNE OBJECTID.

ALTER TABLE
    G_DALC.TEMP_GG_FILES_LIST
DROP COLUMN
    OBJECTID;


-- 1.2. SUPPRESSION DES LIGNES CONTENANT DES FICHIERS Thumbs.db.

DELETE
    FROM G_DALC.TEMP_GG_FILES_LIST
WHERE
    LIEN LIKE '%Thumbs.db'
;


-- 1.3. SUPPRESSION DE LA CONTRAINTE DE CLE PRIMAIRE

SET SERVEROUTPUT ON
DECLARE
    v_nom_1 VARCHAR2(200);
BEGIN
SELECT
    CONSTRAINT_NAME
    INTO v_nom_1
FROM
    USER_CONSTRAINTS
WHERE
    TABLE_NAME = 'TEMP_GG_FILES_LIST'
    AND CONSTRAINT_TYPE = 'P';
EXECUTE IMMEDIATE 'ALTER TABLE G_DALC.TEMP_GG_FILES_LIST DROP CONSTRAINT ' || v_nom_1;
END;

/


-- 1.4. SUPPRESSION DE LA COLONNE OGR_FID

 ALTER TABLE
    G_DALC.TEMP_GG_FILES_LIST
DROP COLUMN
    OGR_FID;


-- 1.5. AJOUT D'UNE COLONNE CLE PRIMAIRE

ALTER TABLE G_DALC.TEMP_GG_FILES_LIST ADD (objectid INTEGER GENERATED BY DEFAULT AS IDENTITY 
    (
        START WITH 1 
        INCREMENT BY 1
        CYCLE
    ));


-- 2. CREATION DE LA COLONNE ID_DOS POUR LA JOINTURE

ALTER TABLE G_DALC.TEMP_GG_FILES_LIST
ADD (ID_DOS NUMBER(34,0));


-- 3. CREATION DE LA COLONNE INTEGRATION

ALTER TABLE G_DALC.TEMP_GG_FILES_LIST
ADD (INTEGRATION NUMBER(34,0));


-- 4. AJOUT DES COMMENTAIRES SUR LES COLONNES DE LA TABLE

COMMENT ON TABLE "G_DALC"."TEMP_GG_FILES_LIST"  IS 'Table de regroupant les fichiers et leurs liens d''acces  pour chaque dossier de l''application GESTIONGEO.';
COMMENT ON COLUMN "G_DALC"."TEMP_GG_FILES_LIST"."OBJECTID" IS 'Clé primaire de la table TEMP_GG_FILES_LIST.';
COMMENT ON COLUMN "G_DALC"."TEMP_GG_FILES_LIST"."LIEN" IS 'Lien vers les fichiers exportes depuis INFOGEO.';
COMMENT ON COLUMN "G_DALC"."TEMP_GG_FILES_LIST"."ID_DOS" IS 'identifiant unique de chaque dossier GESTIONGEO auquel se rattache le fichier';
COMMENT ON COLUMN "G_DALC"."TEMP_GG_FILES_LIST"."INTEGRATION" IS 'Champ indiquant si le fichier a été intégré ou pas. 1 = fichier intégre. O = fichier non intégré.';


-- 5. MISE EN FORME DE LA TABLE POUR ENSUITE INSERER LES INFORMATIONS DANS LA TABLE TA_GG_URL_FILE

-- 5.1. MISE EN FORME DE LA COLONNE LIEN

-- 5.1.1. REMPLACER LES  '/' PAR '\'

UPDATE G_DALC.TEMP_GG_FILES_LIST
SET LIEN = REPLACE(LIEN,'/','\');


-- 5.1.2. MISE EN FORME DU LIEN \\volt\INFOGEO

UPDATE G_DALC.TEMP_GG_FILES_LIST
SET LIEN = CONCAT('\\volt\infogeo',
                    SUBSTR(LIEN,INSTR(LIEN,'\Appli_GG'),LENGTH(LIEN))
                    );


-- 5.2. DETERMINATION DU ID_DOS POUR POUVOIR PERMETTRE SA JOINTURE AVEC LA TABLE TA_GG_URL_FILE.

MERGE INTO G_DALC.TEMP_GG_FILES_LIST a
USING (
    SELECT
        OBJECTID AS OBJECTID,
        SUBSTR(
        -- repere de l'avant dernier \
            SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),
        -- repere du dernier /
            INSTR(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),'\',-1)+1,
            LENGTH(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1)))
            AS ID_DOS
    FROM
        G_DALC.TEMP_GG_FILES_LIST
    WHERE REGEXP_LIKE (
                        SUBSTR(
                                SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),
                                INSTR(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),'\',-1)+1,
                                LENGTH(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1))), '[0-9]')
    AND NOT REGEXP_LIKE (
                        SUBSTR(
                                SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),
                                INSTR(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1),'\',-1)+1,
                                LENGTH(SUBSTR(LIEN,1,INSTR(LIEN,'\',-1)-1))), '[_]')
       )b
ON (a.OBJECTID = b.OBJECTID)
WHEN MATCHED THEN
UPDATE SET a.ID_DOS = b.ID_DOS
;


-- 5.3. MISE A JOUR LE COLONNE INTEGRATION, 

-- 5.3.1. MISE A 1 DE LA COLONNE POUR LES DOSSIERS OU UN SEUL FICHIER DWG EST PRESENT. SEUL LES FICHIERS DWG PEUVENT ÊTRE INTEGRES.

MERGE INTO G_DALC.TEMP_GG_FILES_LIST a
USING
    (
    SELECT
        OBJECTID
    FROM
        G_DALC.TEMP_GG_FILES_LIST
    WHERE
        ID_DOS IN
        (
        SELECT
            ID_DOS
        FROM
            (
            SELECT
                COUNT(ID_DOS),
                ID_DOS
            FROM
                (
                SELECT
                    ID_DOS
                FROM
                    G_DALC.TEMP_GG_FILES_LIST
                WHERE
                    UPPER(SUBSTR(LIEN,-3,3)) = 'DWG'
                )
            GROUP BY
                ID_DOS
            HAVING COUNT(ID_DOS) = 1
            )
        )
    AND
        UPPER(SUBSTR(LIEN,-3,3)) = 'DWG'
    )b
ON (a.OBJECTID = b.OBJECTID)
WHEN MATCHED
THEN UPDATE SET INTEGRATION =1
;


-- 5.3.2. MISE A 0 DE LA COLONNE INTEGRATION POUR LES DOSSIERS OU LES AUTRES FICHIERS D UN DOSSIER OU UN FICHIER EST DEJA A 1

MERGE INTO G_DALC.TEMP_GG_FILES_LIST a
USING
    (
    SELECT
        OBJECTID
    FROM
        G_DALC.TEMP_GG_FILES_LIST
    WHERE ID_DOS
        IN 
        (
        SELECT
            ID_DOS
        FROM
            G_DALC.TEMP_GG_FILES_LIST
        WHERE
            INTEGRATION =1      
        )
    AND UPPER(SUBSTR(LIEN,-3,3)) <> 'DWG'
    )b
ON (a.OBJECTID = b.OBJECTID)
WHEN MATCHED
THEN UPDATE SET INTEGRATION =0
;


-- 5.3.3. MISE A 0 DE LA COLONNE INTEGRATION POUR LES ELEMENTS QUI NE SONT NI DES FICHIERS DWG OU DXF.

UPDATE G_DALC.TEMP_GG_FILES_LIST a
SET INTEGRATION = 0
WHERE UPPER(SUBSTR(LIEN,-3,3)) NOT IN ('DWG','DXF')


-- 6. MERGE AVEC LA TABLE G_GESTIONGEO.TA_GG_URL_FILE

MERGE INTO G_GESTIONGEO.TEMP_GG_URL_FILE a
USING (
    SELECT
        ID_DOS AS FID_DOSSIER,
        LIEN AS DOS_URL_FILE,
        INTEGRATION AS INTEGRATION
    FROM
        G_DALC.TEMP_GG_FILES_LIST
    WHERE
        ID_DOS IS NOT NULL
    )b
ON (a.FID_DOSSIER = b.FID_DOSSIER
AND a.DOS_URL_FILE = b.DOS_URL_FILE)
WHEN NOT MATCHED THEN
INSERT (a.FID_DOSSIER, a.DOS_URL_FILE, a.INTEGRATION)
VALUES (b.FID_DOSSIER, b.DOS_URL_FILE, b.INTEGRATION)
;