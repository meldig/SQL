SET SERVEROUTPUT ON
DECLARE
	v_id NUMBER(38,0);
BEGIN
/*
Code permettant d'insérer les données gestiongeo des tables temporaires dans les tables finales suite aux corrections des données.

SOMMAIRE
1. Désactivation des triggers, clés étrangères, contraintes et index ;
2. Remplissage de la table TA_GG_AGENT ;
3. Remplissage de la table TA_GG_FAMILLE ;
4. Remplissage de la table TA_GG_ETAT ;
5. Remplissage de la table TA_GG_GEO ;
6. Remplissage de la table TA_GG_DOSSIER ;
7. Remplissage de la table TA_GG_GEO ;
	7.1. Modification de l'id de départ de ID_DOS de TA_GG_DOSSIER ;
	7.2. Modification de l'id de départ de ID_GEOM de TA_GG_GEO ;
8. Réactivation des triggers, clés étrangères, contraintes et index ;
	8.1. Contrainte de clé étrangère de TA_GG_GEO ;
	8.2. Réactivation du trigger B_IUX_TA_GG_DOSSIER ;
	8.3. Recréation des index de TA_GG_AGENT ;
	8.4. Recréation des index de TA_GG_FAMILLE ;
	8.5. Recréation des index de TA_GG_GEO ;
	8.6. Recréation des index de TA_GG_URL_FILE ;
*/

SAVEPOINT POINT_SAUVEGARDE_REMPLISSAGE;

--1. Désactivation des triggers, clés étrangères et index
/* Prérequis :
- Désactivation du trigger B_IUX_TA_GG_DOSSIER ;
- Désactivation de la clé étrangère TA_GG_GEO_ID_DOS_FK ;
- Désactivation des index pour accélérer l'insertion des données
*/

EXECUTE IMMEDIATE 'ALTER TABLE G_GESTIONGEO.TA_GG_GEO DISABLE CONSTRAINT TA_GG_GEO_ID_DOS_FK';
EXECUTE IMMEDIATE 'ALTER TRIGGER B_IUX_TA_GG_DOSSIER DISABLE';
EXECUTE IMMEDIATE 'DROP INDEX TA_GG_AGENT_VALIDITE_IDX';
EXECUTE IMMEDIATE 'DROP INDEX TA_GG_FAMILLE_FAM_VAL_IDX';
EXECUTE IMMEDIATE 'DROP INDEX TA_GG_GEO_SIDX';
EXECUTE IMMEDIATE 'DROP INDEX TA_GG_GEO_ETAT_ID_IDX';
EXECUTE IMMEDIATE 'DROP INDEX TA_GG_URL_FILE_FID_DOSSIER_IDX';

-- 2. Remplissage de la table TA_GG_AGENT
-- Insertion des pnoms des agents utilisant gestiongeo
INSERT INTO G_GESTIONGEO.TA_GG_AGENT(OBJECTID, PNOM, VALIDITE)
SELECT
	SRC_ID, 
	SRC_LIBEL, 
	SRC_VAL
FROM
	G_GESTIONGEO.TEMP_TA_GG_AGENT;

-- Insertion des pnoms génériques nécessaires pour des cas bien particuliers
MERGE INTO G_GESTIONGEO.TA_GG_AGENT a
USING(
	SELECT
		88888 AS OBJECTID,
		'plusieurs gestionnaires' AS PNOM,
		1 AS VALIDITE
	FROM
		DUAL
	UNION ALL
	SELECT
		77777 AS OBJECTID,
		'pas encore de gestionnaire' AS PNOM,
		1 AS VALIDITE
	FROM
		DUAL
	UNION ALL
	SELECT
		99999 AS OBJECTID,
		'migration données' AS PNOM,
		1 AS VALIDITE
	FROM
		DUAL
	UNION ALL
	SELECT
		6068 AS OBJECTID,
		'rjault' AS PNOM,
		1 AS VALIDITE
	FROM
		DUAL
	UNION ALL
	SELECT
		5741 AS OBJECTID,
		'bjacq' AS PNOM,
		1 AS VALIDITE
	FROM
		DUAL
)t
ON(a.objectid = t.objectid AND a.pnom = t.pnom)
WHEN NOT MATCHED THEN
	INSERT(a.objectid, a.pnom, a.validite)
	VALUES(t.objectid, t.pnom, t.validite);

-- 3. Remplissage de la table TA_GG_FAMILLE
INSERT INTO G_GESTIONGEO.TA_GG_FAMILLE(FAM_ID, FAM_LIB, FAM_VAL, FAM_LIB_SMALL)
SELECT
	FAM_ID, 
	FAM_LIB, 
	FAM_VAL,
	FAM_LIB_SMALL
FROM
	G_GESTIONGEO.TEMP_TA_GG_FAMILLE;

-- 4. Remplissage de la table TA_GG_ETAT
INSERT INTO G_GESTIONGEO.TA_GG_ETAT(ETAT_ID, ETAT_LIB, ETAT_AFF, ETAT_LIB_SMALL, ETAT_SMALL)
SELECT 
	ETAT_ID, 
	ETAT_LIB, 
	ETAT_AFF, 
	ETAT_LIB_SMALL, 
	ETAT_SMALL
FROM
	G_GESTIONGEO.TEMP_TA_GG_ETAT;

-- 5. Remplissage de la table TA_GG_GEO
INSERT INTO G_GESTIONGEO.TA_GG_GEO(ID_GEOM, ID_DOS, ETAT_ID, GEOM, DOS_NUM)
SELECT
	ID_GEOM, 
	ID_DOS, 
	ETAT_ID, 
	ORA_GEOMETRY,
	DOS_NUM
FROM
	G_GESTIONGEO.TEMP_TA_GG_GEO;

-- 6. Remplissage de la table TA_GG_DOSSIER
INSERT INTO G_GESTIONGEO.TA_GG_DOSSIER(ID_DOS, SRC_ID, ETAT_ID, USER_ID, FAM_ID, DOS_DC, DOS_PRECISION, DOS_DMAJ, DOS_RQ, DOS_DT_FIN, DOS_PRIORITE, DOS_IDPERE, DOS_DT_DEB_TR, DOS_DT_FIN_TR, DOS_DT_CMD_SAI, DOS_INSEE, DOS_VOIE, DOS_MAO, DOS_ENTR, ORDER_ID, DOS_NUM, DOS_OLD_ID, DOS_DT_DEB_LEVE, DOS_DT_FIN_LEVE, DOS_DT_PREV)
SELECT
	ID_DOS, 
	SRC_ID, 
	ETAT_ID, 
	USER_ID, 
	FAM_ID, 
	DOS_DC, 
	DOS_PRECISION, 
	DOS_DMAJ, 
	DOS_RQ, 
	DOS_DT_FIN, 
	DOS_PRIORITE, 
	DOS_IDPERE, 
	DOS_DT_DEB_TR, 
	DOS_DT_FIN_TR, 
	DOS_DT_CMD_SAI, 
	DOS_INSEE, 
	DOS_VOIE, 
	DOS_MAO, 
	DOS_ENTR, 
	ORDER_ID, 
	DOS_NUM, 
	DOS_OLD_ID, 
	DOS_DT_DEB_LEVE, 
	DOS_DT_FIN_LEVE, 
	DOS_DT_PREV	
FROM
	G_GESTIONGEO.TEMP_TA_GG_DOSSIER;

-- 7. Redéfinition du START WITH des champs de type IDENTITY BY DEFAULT
-- 7.1. Modification de l'id de départ de ID_DOS de TA_GG_DOSSIER
SELECT
	MAX(a.ID_DOS)+1
	INTO v_id
FROM
	G_GESTIONGEO.TA_GG_DOSSIER a;

EXECUTE IMMEDIATE 'ALTER TABLE TA_GG_DOSSIER MODIFY ID_DOS GENERATED BY DEFAULT AS IDENTITY (START WITH ' || v_id  || ' INCREMENT BY 1)';

-- 7.2. Modification de l'id de départ de ID_GEOM de TA_GG_GEO
SELECT
	MAX(a.ID_GEOM)+1
	INTO v_id
FROM
	G_GESTIONGEO.TA_GG_GEO a;

EXECUTE IMMEDIATE 'ALTER TABLE TA_GG_GEO MODIFY ID_GEOM GENERATED BY DEFAULT AS IDENTITY (START WITH ' || v_id || ' INCREMENT BY 1)';

COMMIT;

-- 8. Réactivation des triggers, clés étrangères, contraintes et index
-- 8.1. Contrainte de clé étrangère de TA_GG_GEO
EXECUTE IMMEDIATE 'ALTER TABLE G_GESTIONGEO.TA_GG_GEO ENABLE CONSTRAINT TA_GG_GEO_ID_DOS_FK';

-- 8.2. Réactivation du trigger B_IUX_TA_GG_DOSSIER
EXECUTE IMMEDIATE 'ALTER TRIGGER B_IUX_TA_GG_DOSSIER ENABLE';

-- 8.3. Recréation des index de TA_GG_AGENT
EXECUTE IMMEDIATE 'CREATE INDEX G_GESTIONGEO."TA_GG_AGENT_VALIDITE_IDX" ON G_GESTIONGEO.TA_GG_AGENT ("VALIDITE") TABLESPACE G_ADT_INDX';

-- 8.4. Recréation des index de TA_GG_FAMILLE
EXECUTE IMMEDIATE 'CREATE INDEX G_GESTIONGEO."TA_GG_FAMILLE_FAM_VAL_IDX" ON G_GESTIONGEO.TA_GG_FAMILLE ("FAM_VAL") TABLESPACE G_ADT_INDX';

-- 8.5. Recréation des index de TA_GG_GEO
EXECUTE IMMEDIATE 'CREATE INDEX TA_GG_GEO_SIDX ON G_GESTIONGEO.TA_GG_GEO(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS(''sdo_indx_dims=2, layer_gtype=MULTIPOLYGON, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP'')';
EXECUTE IMMEDIATE 'CREATE INDEX G_GESTIONGEO."TA_GG_GEO_ETAT_ID_IDX" ON G_GESTIONGEO.TA_GG_GEO ("ETAT_ID") TABLESPACE G_ADT_INDX';

-- 8.6. Recréation des index de TA_GG_URL_FILE
EXECUTE IMMEDIATE 'CREATE INDEX G_GESTIONGEO."TA_GG_URL_FILE_FID_DOSSIER_IDX" ON G_GESTIONGEO.TA_GG_URL_FILE ("FID_DOSSIER") TABLESPACE G_ADT_INDX';

-- En cas d'erreur une exception est levée et un rollback effectué, empêchant ainsi toute insertion de se faire et de retourner à l'état des tables précédent l'insertion.
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('L''erreur ' || SQLCODE || 'est survenue. Un rollback a été effectué : ' || SQLERRM(SQLCODE));
        ROLLBACK TO POINT_SAUVEGARDE_REMPLISSAGE;
END;