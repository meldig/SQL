# Fonction basée sur un index

## Usage :
Dans oracle la fonction basée sur un index est le pendant du champ virtuel. En d'autres termes, elle créé un champ virtuel dans lequel sont calculés des données dans une table ou une vue matérialisée et ce, dynamiquement (si une donnée utilisée dans la fonction change, la valeur retournée par celle-ci peut changer aussi).

## Utilité :
Cet objet permet, nous l'avons vu, de calculer des valeurs dans le champ d'une table ou d'une vue matérialisée. L'intérêt de la fonction basée sur un index est la rapidité de calcul qui est bien supérieure à celle d'un champ virtuel classique, puisqu'elle se base sur un index.
La différence est surtout visible lors de la création de vues sur une table disposant d'une fonction basée sur un index : son temps d'affichage est considérablement réduit, permettant d'afficher dans qgis une vue qui n'aurait pas été affichable si elle avait porté sur un simple champ virtuel.

## Inconvénient :
1. La colonne virtuelle créée par la fonction basée sur un index est cachée. Pour la repérer il faut utiliser la requête suivante :
```SQL
SELECT 
    column_name, 
    hidden_column, 
    virtual_column
FROM 
    user_tab_cols
WHERE 
    table_name = 'NOM_TABLE'
    AND hidden_column = 'YES'
    AND virtual_column = 'YES';
```

2. Une colonne virtuelle générée par le système ne peut pas être rendue visible. Elle restera toujours invisible.

3. Une colonne virtuelle d'index fonctionnel générée par le système ne peut pas être renommée.

## Méthode de création d'une fonction basée sur un index :
1. Créer une table
```SQL
-- 1. Création de la table
CREATE TABLE G_BASE_VOIE.MA_TABLE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY
);

-- 2. Création du commentaire de table
COMMENT ON TABLE G_BASE_VOIE.MA_TABLE IS 'Table temporaire servant à tester les fonctions basées sur les index.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.MA_TABLE 
ADD CONSTRAINT MA_TABLE_PK 
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'MA_TABLE',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);
```

2. Créer la fonction basée sur un index
```SQL
CREATE INDEX MA_TABLE_CODE_INSEE_IDX
ON G_BASE_VOIE.MA_TABLE(GET_TEMP_CODE_INSEE('MA_TABLE', geom))
TABLESPACE G_ADT_INDX;
```

3. Créer un index spatial (cet index est important dans notre cas puisque la fonction basée sur l'index *MA_TABLE_CODE_INSEE_IDX* utilise le champ geom)
```SQL
CREATE INDEX MA_TABLE_SIDX
ON G_BASE_VOIE.MA_TABLE(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=LINE, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');
```