/*
La table TA_GG_GEO_LOG  permet d''avoir l''historique de toutes les évolutions des périmètres des dossiers des géomètres (GestionGeo).
*/

-- 1. Création de la table TA_GG_GEO_LOG
CREATE TABLE G_GESTIONGEO.TA_GG_GEO_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    id_perimetre NUMBER(38,0) NOT NULL,
    geom SDO_GEOMETRY NOT NULL,
    code_insee VARCHAR2(5),
    surface NUMBER(38,0),
    id_dossier NUMBER(38,0),
    etat_avancement VARCHAR2(4000 BYTE),
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_GESTIONGEO.TA_GG_GEO_LOG IS 'Table de log de la table TA_GG_GEO permettant d''avoir l''historique de toutes les évolutions des périmètres de dossiers des levés des géomètres. Précision : cette table contient au maximum l''état n-1 de chaque entité.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.id_perimetre IS 'Identifiant de la table TA_GG_GEO permettant de savoir sur quel périmètre de dossier les actions ont été entreprises.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.geom IS 'Géométrie de type multipolygone de chaque dossier présent dans la table.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.code_insee IS 'Code INSEE de la commune d''appartenance du centroïde du dossier.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.surface IS 'Surface de chaque périmètre de chaque dossier.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.date_action IS 'Date de création, modification ou suppression de la géométrie d''un dossier.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE permettant de savoir quelle action a été effectuée sur le périmètre du dossier.';
COMMENT ON COLUMN G_GESTIONGEO.TA_GG_GEO_LOG.fid_pnom IS 'Clé étrangère vers la table TA_GG_AGENT permettant d''associer le pnom d''un agent au périmètre du dossier qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_GESTIONGEO.TA_GG_GEO_LOG 
ADD CONSTRAINT TA_GG_GEO_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_GG_GEO_LOG',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_GG_GEO_LOG_SIDX
ON G_GESTIONGEO.TA_GG_GEO_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=MULTIPOLYGON, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_GESTIONGEO.TA_GG_GEO_LOG
ADD CONSTRAINT TA_GG_GEO_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_GESTIONGEO.TA_GG_GEO_LOG
ADD CONSTRAINT TA_GG_GEO_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_GESTIONGEO.TA_GG_AGENT(objectid);

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TA_GG_GEO_LOG_FID_PERIMETRE_IDX ON G_GESTIONGEO.TA_GG_GEO_LOG(id_perimetre)
    TABLESPACE G_ADT_INDX;
    
CREATE INDEX TA_GG_GEO_LOG_ID_DOSSIER_IDX ON G_GESTIONGEO.TA_GG_GEO_LOG(id_dossier)
    TABLESPACE G_ADT_INDX;
    
CREATE INDEX TA_GG_GEO_LOG_FID_TYPE_ACTION_IDX ON G_GESTIONGEO.TA_GG_GEO_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GG_GEO_LOG_FID_PNOM_IDX ON G_GESTIONGEO.TA_GG_GEO_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GG_GEO_LOG_CODE_INSEE_IDX ON G_GESTIONGEO.TA_GG_GEO_LOG(code_insee)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_GESTIONGEO.TA_GG_GEO_LOG TO G_ADMIN_SIG;

/

